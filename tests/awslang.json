[
  {
    "name": "APIGateway",
    "description": "This asset represents the API Gateway service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the API Gateway service."
    }
  },
  {
    "name": "APIKey",
    "description": "Represents APIKeys used to authenticate to APIGateway.",
    "attacksteps": [
      {
        "name": "AttemptAccess",
        "description": "The attacker is attempting to access the credentials.",
        "risktype": [],
        "metaInfo": {
          "modeler": "The AWS parser should add a relationship from the attacker to each credentials.attemptAccess to simulate phishing attempts",
          "user": "The attacker is attempting to access the credentials."
        }
      },
      {
        "name": "CredentialTheft",
        "description": "The attacker is able to steal or harvest the credentials from for example public repositories.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Use temporary credentials or a key management service.",
          "stride": "Information Disclosure",
          "user": "The attacker is able to steal or harvest the credentials from for example public repositories."
        }
      }
    ],
    "metaInfo": {
      "modeler": "Every IAM Identity must be associated with some type of credentials. For example, for IAM User, on the console level it can be the password while on the AWS CLI/API level it can be the Access Keys (Access Key ID and Secret Access Key); for IAM Role, it can be the temporary security credentials.",
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents APIKeys used to authenticate to APIGateway."
    }
  },
  {
    "name": "AccessKey",
    "description": "Represents the access key pair for the AWS CLI. Access keys can be vulnerable to phishing attacks or leakage.",
    "attacksteps": [
      {
        "name": "Activate",
        "description": "The attacker is able to activate this inactive access key pair.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is able to activate this inactive access key pair."
        }
      },
      {
        "name": "AttemptAccess",
        "description": "The attacker is attempting to access the credentials.",
        "risktype": [],
        "metaInfo": {
          "modeler": "The AWS parser should add a relationship from the attacker to each credentials.attemptAccess to simulate phishing attempts",
          "user": "The attacker is attempting to access the credentials."
        }
      },
      {
        "name": "CredentialTheft",
        "description": "The attacker is able to steal or harvest the credentials from for example public repositories.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Use temporary credentials or a key management service.",
          "stride": "Information Disclosure",
          "user": "The attacker is able to steal or harvest the credentials from for example public repositories."
        }
      },
      {
        "name": "Use",
        "description": "The attacker has gained access to and is able to use this active access key pair to assume its user.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Deactivate or delete access keys for high privileged IAM users.",
          "mitre": "T1552 Unsecured Credentials",
          "stride": "Information Disclosure",
          "user": "The attacker has gained access to and is able to use this active access key pair to assume its user."
        }
      }
    ],
    "metaInfo": {
      "modeler": "Every IAM Identity must be associated with some type of credentials. For example, for IAM User, on the console level it can be the password while on the AWS CLI/API level it can be the Access Keys (Access Key ID and Secret Access Key); for IAM Role, it can be the temporary security credentials.",
      "developer": "https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys",
      "user": "Represents the access key pair for the AWS CLI. Access keys can be vulnerable to phishing attacks or leakage."
    }
  },
  {
    "name": "Account",
    "description": "Accounts grants privileges on AWS resources, applications and instances.",
    "attacksteps": [
      {
        "name": "Assume",
        "description": "The attacker can assume the account and gain all it's privileges and permissions.",
        "risktype": [],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker can assume the account and gain all it's privileges and permissions."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Accounts grants privileges on AWS resources, applications and instances."
    }
  },
  {
    "name": "AmazonResourceName",
    "description": "Amazon Resource Names (ARNs) are used to reference AWS resources",
    "attacksteps": [],
    "metaInfo": {
      "user": "Amazon Resource Names (ARNs) are used to reference AWS resources"
    }
  },
  {
    "name": "Application",
    "description": "An application represents anything that is executed in a machine.",
    "attacksteps": [
      {
        "name": "CodeExecution",
        "description": "The attacker can execute arbitrary code in the application, assuming it's privileges.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "This attack steps specifically models the type of code injections which result in arbitrary code executions (e.g., buffer overflows), where the attacker can redirect the flow of execution, for example, by modifying program counter/instruction pointer of the host. (See CWE-94 on code injection <https://cwe.mitre.org/data/definitions/94.html> and, for example, CAPEC-100 on overflowing buffers <https://capec.mitre.org/data/definitions/100.html>)",
          "mitre": "T1210 Exploitation of Remote Services",
          "stride": "Tampering",
          "user": "The attacker can execute arbitrary code in the application, assuming it's privileges."
        }
      },
      {
        "name": "Deny",
        "description": "The attacker can deny some or all functionality and data pertaining to this service.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitre": "T1499 Endpoint Denial of Service",
          "stride": "Denial of Service",
          "user": "The attacker can deny some or all functionality and data pertaining to this service."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker has gained admin rights to the application.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker has gained admin rights to the application."
        }
      },
      {
        "name": "LocalConnect",
        "description": "The attacker has gained low-privilege access on the executing instance and can interact with the application.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1007 System Service Discovery",
          "user": "The attacker has gained low-privilege access on the executing instance and can interact with the application."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker has gained user rights to the application.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker has gained user rights to the application."
        }
      },
      {
        "name": "Modify",
        "description": "The attacker can modify some or all of this service's data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can modify some or all of this service's data."
        }
      },
      {
        "name": "NetworkRequestConnect",
        "description": "The attacker has successfully sent a request to the application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "The attacker has successfully sent a request to the application."
        }
      },
      {
        "name": "NetworkRespondConnect",
        "description": "An attacker might be able to respond with forged requests submitted by an application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "An attacker might be able to respond with forged requests submitted by an application."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read some or all of this service's code and data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "developer": "We don't model the services data, as we do not expect that information will be available to the parser. We also don't differentiate between service administrators and service users (e.g., mail service admins and users), as we have no information about the services.",
          "stride": "Information Disclosure",
          "user": "The attacker can read some or all of this service's code and data."
        }
      },
      {
        "name": "RequestForgery",
        "description": "The attacker can create or control transmissions from a vulnerable application.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker can create or control transmissions from a vulnerable application."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "An application represents anything that is executed in a machine."
    }
  },
  {
    "name": "Attacker",
    "description": "An Attacker is an individual who is determined to gain access to resources with or without the proper authority, often to uncover and exploit weaknesses or cause damage. Naturally, the success rate of the attacker is dependent on its characteristics.\n\nIn securiCAD, an Attacker is assumed to be a professional penetration tester with all public knowledge and tools to its disposal. As such, each attack step and the provided statistics of success must be viewed in the light of a penetration tester attacker profile.",
    "attacksteps": [
      {
        "name": "EntryPoint",
        "description": "",
        "risktype": [],
        "metaInfo": {}
      }
    ],
    "metaInfo": {}
  },
  {
    "name": "AuthorizationToken",
    "description": "Represents an authorization token used for ECR.",
    "attacksteps": [
      {
        "name": "AttemptAccess",
        "description": "The attacker is attempting to access the credentials.",
        "risktype": [],
        "metaInfo": {
          "modeler": "The AWS parser should add a relationship from the attacker to each credentials.attemptAccess to simulate phishing attempts",
          "user": "The attacker is attempting to access the credentials."
        }
      },
      {
        "name": "CredentialTheft",
        "description": "The attacker is able to steal or harvest the credentials from for example public repositories.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Use temporary credentials or a key management service.",
          "stride": "Information Disclosure",
          "user": "The attacker is able to steal or harvest the credentials from for example public repositories."
        }
      },
      {
        "name": "GenerateRegistryPassword",
        "description": "The attacker can decode the base64 token, the string is used in the docker login command.",
        "risktype": [
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker can decode the base64 token, the string is used in the docker login command."
        }
      }
    ],
    "metaInfo": {
      "modeler": "Every IAM Identity must be associated with some type of credentials. For example, for IAM User, on the console level it can be the password while on the AWS CLI/API level it can be the Access Keys (Access Key ID and Secret Access Key); for IAM Role, it can be the temporary security credentials.",
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents an authorization token used for ECR."
    }
  },
  {
    "name": "CMKKey",
    "description": "Customer Master Keys (CMKs) and are mainly used to generate keys for encryption and decryption.",
    "attacksteps": [
      {
        "name": "Decrypt",
        "description": "The attacker is able to decrypt data with the generated data keys.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "user": "The attacker is able to decrypt data with the generated data keys."
        }
      },
      {
        "name": "Encrypt",
        "description": "The attacker is able to encrypt data with the generated data keys.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is able to encrypt data with the generated data keys."
        }
      },
      {
        "name": "GenerateDataKey",
        "description": "The attacker is able to generate data keys for encryption and decryption.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is able to generate data keys for encryption and decryption."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Customer Master Keys (CMKs) and are mainly used to generate keys for encryption and decryption."
    }
  },
  {
    "name": "CloudFormation",
    "description": "This asset represents the CloudFormation service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the CloudFormation service."
    }
  },
  {
    "name": "CloudFormationCreateStack",
    "description": "Creates a stack as specified in a Cloudformation template.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Creates a stack as specified in a Cloudformation template.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Creates a stack as specified in a Cloudformation template."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStack.html",
      "user": "Creates a stack as specified in a Cloudformation template."
    }
  },
  {
    "name": "CodeStar",
    "description": "This asset represents the CodeStar service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the CodeStar service."
    }
  },
  {
    "name": "CodeStarCreateProject",
    "description": "Creates a CodeStar project, including resources.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Creates a CodeStar project, including resources.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Creates a CodeStar project, including resources."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/codestar/latest/APIReference/API_CreateProject.html",
      "user": "Creates a CodeStar project, including resources."
    }
  },
  {
    "name": "ContainerInstance",
    "description": "A container instance is an EC2 instance running the container agent",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "GetRoleCredentials",
        "description": "The attacker can get access to the set of permissions that the attached instance profile or role has.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Follow the standard security advice of granting least privilege and consider using GuardDuty which triggers on this. See https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types.html#unauthorized11",
          "mitre": "T1552.005 Unsecured Credentials: Cloud Instance Metadata API",
          "stride": "Information Disclosure",
          "user": "The attacker can get access to the set of permissions that the attached instance profile or role has."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker has gained full control of the instance docker daemon effectively compromising all containers and possibly stored registry credentials.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitigation": "Implement a threat detection service such as Amazon GuardDuty to detect malicious behaviour. For more information, see https://aws.amazon.com/guardduty/.",
          "developer": "With high privilege access the attacker can make valid requests to IMDSv2, bypassing the defense.",
          "stride": "Tampering",
          "user": "The attacker has gained full control of the instance docker daemon effectively compromising all containers and possibly stored registry credentials."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "Access to Docker daemon means the containers are compromised, the container instance might have stored registry credentials",
        "risktype": [],
        "metaInfo": {
          "user": "Access to Docker daemon means the containers are compromised, the container instance might have stored registry credentials"
        }
      },
      {
        "name": "ModifyUserDataScript",
        "description": "The attacker can modify the user data script and execute any code as root when the machine is started.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "In practice, the machine must be stopped/started for the script to take effect.",
          "mitre": "T1037 Boot or Logon Initialization Scripts",
          "user": "The attacker can modify the user data script and execute any code as root when the machine is started."
        }
      },
      {
        "name": "StartSSMSession",
        "description": "The attacker can start a SSM session to the instance and execute any code on the machine.",
        "risktype": [],
        "metaInfo": {
          "developer": "In practice, the machine must have the SSM Agent installed and the correct instance profile.",
          "mitre": "T1021.004 Remote Services: SSH",
          "user": "The attacker can start a SSM session to the instance and execute any code on the machine."
        }
      },
      {
        "name": "Terminate",
        "description": "The attacker has terminated the instance. When an instance terminates, the data on any instance store volumes associated with that instance is deleted and associated tasks are stopped.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitigation": "Enable termination protection and do frequent backups. For more information, see https://aws.amazon.com/premiumsupport/knowledge-center/accidental-termination/.",
          "developer": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html",
          "mitre": "T1529 System Shutdown/Reboot",
          "stride": "Denial of Service",
          "user": "The attacker has terminated the instance. When an instance terminates, the data on any instance store volumes associated with that instance is deleted and associated tasks are stopped."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A container instance is an EC2 instance running the container agent"
    }
  },
  {
    "name": "ContainerInterface",
    "description": "A container's network interface.",
    "attacksteps": [
      {
        "name": "RespondConnect",
        "description": "The attacker is able to spoof the server, in case a client submits a request.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "As we do not model clients, with some limited probability, this attack step leads directly to the possibility to connect to an application.",
          "stride": "Spoofing",
          "user": "The attacker is able to spoof the server, in case a client submits a request."
        }
      },
      {
        "name": "TransmitRequest",
        "description": "The attacker is able to transmit requests from the container network interface.",
        "risktype": [],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker is able to transmit requests from the container network interface."
        }
      },
      {
        "name": "TransmitResponse",
        "description": "The attacker is able to spoof and transmit responses to clients from the network interface.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker is able to spoof and transmit responses to clients from the network interface."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A container's network interface."
    }
  },
  {
    "name": "ContainerListener",
    "description": "A listener for incoming traffic to containers.",
    "attacksteps": [
      {
        "name": "CodeExecution",
        "description": "The attacker can execute arbitrary code in the application, assuming it's privileges.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "This attack steps specifically models the type of code injections which result in arbitrary code executions (e.g., buffer overflows), where the attacker can redirect the flow of execution, for example, by modifying program counter/instruction pointer of the host. (See CWE-94 on code injection <https://cwe.mitre.org/data/definitions/94.html> and, for example, CAPEC-100 on overflowing buffers <https://capec.mitre.org/data/definitions/100.html>)",
          "mitre": "T1210 Exploitation of Remote Services",
          "stride": "Tampering",
          "user": "The attacker can execute arbitrary code in the application, assuming it's privileges."
        }
      },
      {
        "name": "Deny",
        "description": "The attacker can deny some or all functionality and data pertaining to this service.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitre": "T1499 Endpoint Denial of Service",
          "stride": "Denial of Service",
          "user": "The attacker can deny some or all functionality and data pertaining to this service."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker has gained admin rights to the application.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker has gained admin rights to the application."
        }
      },
      {
        "name": "LocalConnect",
        "description": "The attacker has gained low-privilege access on the executing instance and can interact with the application.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1007 System Service Discovery",
          "user": "The attacker has gained low-privilege access on the executing instance and can interact with the application."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker has gained user rights to the application.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker has gained user rights to the application."
        }
      },
      {
        "name": "Modify",
        "description": "The attacker can modify some or all of this service's data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can modify some or all of this service's data."
        }
      },
      {
        "name": "NetworkRequestConnect",
        "description": "The attacker can send requests to the application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security groups, ACLs, load balancers and gateways.",
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker can send requests to the application."
        }
      },
      {
        "name": "NetworkRespondConnect",
        "description": "An attacker might be able to respond with forged requests submitted by an application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "An attacker might be able to respond with forged requests submitted by an application."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read some or all of this service's code and data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "developer": "We don't model the services data, as we do not expect that information will be available to the parser. We also don't differentiate between service administrators and service users (e.g., mail service admins and users), as we have no information about the services.",
          "stride": "Information Disclosure",
          "user": "The attacker can read some or all of this service's code and data."
        }
      },
      {
        "name": "RequestForgery",
        "description": "The attacker can create or control transmissions from a vulnerable application.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker can create or control transmissions from a vulnerable application."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A listener for incoming traffic to containers."
    }
  },
  {
    "name": "Credentials",
    "description": "Represents passphrase or keys needed to authenticate as an identity in AWS, e.g., private SSH keys. Credentials are typically vulnerable to phishing attacks.",
    "attacksteps": [
      {
        "name": "AttemptAccess",
        "description": "The attacker is attempting to access the credentials.",
        "risktype": [],
        "metaInfo": {
          "modeler": "The AWS parser should add a relationship from the attacker to each credentials.attemptAccess to simulate phishing attempts",
          "user": "The attacker is attempting to access the credentials."
        }
      },
      {
        "name": "CredentialTheft",
        "description": "The attacker is able to steal or harvest the credentials from for example public repositories.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Use temporary credentials or a key management service.",
          "stride": "Information Disclosure",
          "user": "The attacker is able to steal or harvest the credentials from for example public repositories."
        }
      }
    ],
    "metaInfo": {
      "modeler": "Every IAM Identity must be associated with some type of credentials. For example, for IAM User, on the console level it can be the password while on the AWS CLI/API level it can be the Access Keys (Access Key ID and Secret Access Key); for IAM Role, it can be the temporary security credentials.",
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents passphrase or keys needed to authenticate as an identity in AWS, e.g., private SSH keys. Credentials are typically vulnerable to phishing attacks."
    }
  },
  {
    "name": "DBData",
    "description": "This asset represent data in the databases hosted by the DB instance.",
    "attacksteps": [
      {
        "name": "AuthenticatedDecrypt",
        "description": "The attacker is authenticated to decrypt encrypted data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to decrypt encrypted data."
        }
      },
      {
        "name": "AuthenticatedDelete",
        "description": "The attacker is authenticated to access and delete the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to access and delete the data."
        }
      },
      {
        "name": "AuthenticatedEncrypt",
        "description": "The attacker is authenticated to encrypt and write the encrypted data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to encrypt and write the encrypted data."
        }
      },
      {
        "name": "AuthenticatedList",
        "description": "The attacker is authenticated to access and list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to access and list the data."
        }
      },
      {
        "name": "AuthenticatedRead",
        "description": "The attacker is authenticated to access and read the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to access and read the data."
        }
      },
      {
        "name": "AuthenticatedWrite",
        "description": "The attacker is authenticated to access and write data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to access and write data."
        }
      },
      {
        "name": "Delete",
        "description": "The attacker can delete the data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1485 Data Destruction",
          "stride": "Tampering",
          "user": "The attacker can delete the data."
        }
      },
      {
        "name": "DenialOfService",
        "description": "The attacker is preventing regular access to the data.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "stride": "Denial of Service",
          "user": "The attacker is preventing regular access to the data."
        }
      },
      {
        "name": "Encrypt",
        "description": "The attacker is able to encrypt the data to interrupt availability or extortion.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1486 Data Encrypted for Impact",
          "user": "The attacker is able to encrypt the data to interrupt availability or extortion."
        }
      },
      {
        "name": "List",
        "description": "The attacker can list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can list the data."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read the data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "stride": "Information Disclosure",
          "user": "The attacker can read the data."
        }
      },
      {
        "name": "Write",
        "description": "The attacker can write to the location of the data, effectively deleting it.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1565 Data Manipulation",
          "stride": "Tampering",
          "user": "The attacker can write to the location of the data, effectively deleting it."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "This asset represent data in the databases hosted by the DB instance."
    }
  },
  {
    "name": "DBEngine",
    "description": "Represents a specific database engine running on an instance.",
    "attacksteps": [
      {
        "name": "CodeExecution",
        "description": "The attacker can execute arbitrary code in the application, assuming it's privileges.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "This attack steps specifically models the type of code injections which result in arbitrary code executions (e.g., buffer overflows), where the attacker can redirect the flow of execution, for example, by modifying program counter/instruction pointer of the host. (See CWE-94 on code injection <https://cwe.mitre.org/data/definitions/94.html> and, for example, CAPEC-100 on overflowing buffers <https://capec.mitre.org/data/definitions/100.html>)",
          "mitre": "T1210 Exploitation of Remote Services",
          "stride": "Tampering",
          "user": "The attacker can execute arbitrary code in the application, assuming it's privileges."
        }
      },
      {
        "name": "Deny",
        "description": "The attacker can deny some or all functionality and data pertaining to this service.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitre": "T1499 Endpoint Denial of Service",
          "stride": "Denial of Service",
          "user": "The attacker can deny some or all functionality and data pertaining to this service."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacked has gained access to the endpoint of the DB instance.",
        "risktype": [],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacked has gained access to the endpoint of the DB instance."
        }
      },
      {
        "name": "LocalConnect",
        "description": "The attacker has gained low-privilege access on the executing instance and can interact with the application.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1007 System Service Discovery",
          "user": "The attacker has gained low-privilege access on the executing instance and can interact with the application."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker has gained user rights to the application.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker has gained user rights to the application."
        }
      },
      {
        "name": "Modify",
        "description": "The attacker can modify some or all of this service's data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can modify some or all of this service's data."
        }
      },
      {
        "name": "NetworkRequestConnect",
        "description": "The attacker has successfully sent a request to the application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "The attacker has successfully sent a request to the application."
        }
      },
      {
        "name": "NetworkRespondConnect",
        "description": "An attacker might be able to respond with forged requests submitted by an application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "An attacker might be able to respond with forged requests submitted by an application."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read some or all of this service's code and data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "developer": "We don't model the services data, as we do not expect that information will be available to the parser. We also don't differentiate between service administrators and service users (e.g., mail service admins and users), as we have no information about the services.",
          "stride": "Information Disclosure",
          "user": "The attacker can read some or all of this service's code and data."
        }
      },
      {
        "name": "RequestForgery",
        "description": "The attacker can create or control transmissions from a vulnerable application.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker can create or control transmissions from a vulnerable application."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents a specific database engine running on an instance."
    }
  },
  {
    "name": "DBInstance",
    "description": "Represents a database instance in Amazon's RDS service.",
    "attacksteps": [
      {
        "name": "Delete",
        "description": "The attacker has deleted the DB instance, all automated backups for that instance are deleted and can't be recovered.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1529 System Shutdown/Reboot",
          "stride": "Tampering",
          "user": "The attacker has deleted the DB instance, all automated backups for that instance are deleted and can't be recovered."
        }
      },
      {
        "name": "DeleteDatabase",
        "description": "The attacker is able to delete one or more database in the database instance.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1485 Data Destruction",
          "stride": "Tampering",
          "user": "The attacker is able to delete one or more database in the database instance."
        }
      },
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker can access any application and transmit traffic from the instance.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can access any application and transmit traffic from the instance."
        }
      },
      {
        "name": "ListDatabase",
        "description": "The attacker is able to list one or more database in the database instance.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker is able to list one or more database in the database instance."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker can connect to any local application allows for network transmissions from the instance.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can connect to any local application allows for network transmissions from the instance."
        }
      },
      {
        "name": "ReadDatabase",
        "description": "The attacker is able to read one or more database in the database instance.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "stride": "Information Disclosure",
          "user": "The attacker is able to read one or more database in the database instance."
        }
      },
      {
        "name": "Terminate",
        "description": "The attacker can terminate the instance and any data on associated with it is deleted.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitigation": "Enable termination protection and do frequent backups. For more information, see https://aws.amazon.com/premiumsupport/knowledge-center/accidental-termination/.",
          "developer": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html",
          "mitre": "T1529 System Shutdown/Reboot",
          "stride": "Denial of Service",
          "user": "The attacker can terminate the instance and any data on associated with it is deleted."
        }
      },
      {
        "name": "WriteDatabase",
        "description": "The attacker is able to write to one or more database in the database instance.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1565.001 Data Manipulation: Stored Data Manipulation",
          "stride": "Tampering",
          "user": "The attacker is able to write to one or more database in the database instance."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents a database instance in Amazon's RDS service."
    }
  },
  {
    "name": "DBMasterUser",
    "description": "Represents the DB Master user in the database.",
    "attacksteps": [
      {
        "name": "Authenticate",
        "description": "The attacker is able to authenticate as the DB master user.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker is able to authenticate as the DB master user."
        }
      }
    ],
    "metaInfo": {
      "user": "Represents the DB Master user in the database."
    }
  },
  {
    "name": "Data",
    "description": "Represents any form of stored or transmitted data.",
    "attacksteps": [
      {
        "name": "AuthenticatedDelete",
        "description": "The attacker is authenticated to access and delete the data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and delete the data."
        }
      },
      {
        "name": "AuthenticatedList",
        "description": "The attacker is authenticated to access and list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to access and list the data."
        }
      },
      {
        "name": "AuthenticatedRead",
        "description": "The attacker is authenticated to access and read the data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and read the data."
        }
      },
      {
        "name": "AuthenticatedWrite",
        "description": "The attacker is authenticated to access and write data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and write data."
        }
      },
      {
        "name": "Delete",
        "description": "The attacker can delete the data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1485 Data Destruction",
          "stride": "Tampering",
          "user": "The attacker can delete the data."
        }
      },
      {
        "name": "DenialOfService",
        "description": "The attacker is preventing regular access to the data.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "stride": "Denial of Service",
          "user": "The attacker is preventing regular access to the data."
        }
      },
      {
        "name": "List",
        "description": "The attacker can list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can list the data."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read the data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "stride": "Information Disclosure",
          "user": "The attacker can read the data."
        }
      },
      {
        "name": "Write",
        "description": "The attacker can write to the location of the data, effectively deleting it.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1565 Data Manipulation",
          "stride": "Tampering",
          "user": "The attacker can write to the location of the data, effectively deleting it."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents any form of stored or transmitted data."
    }
  },
  {
    "name": "DataPipeline",
    "description": "This asset represents the Data Pipeline service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the Data Pipeline service."
    }
  },
  {
    "name": "DataPipelineCreatePipeline",
    "description": "Creates a new, empty pipeline.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Creates a new, empty pipeline.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Creates a new, empty pipeline."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/datapipeline/latest/APIReference/API_CreatePipeline.html",
      "user": "Creates a new, empty pipeline."
    }
  },
  {
    "name": "DataPipelinePutPipelineDefinition",
    "description": "Adds tasks, schedules, and preconditions to the specified pipeline.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Adds tasks, schedules, and preconditions to the specified pipeline.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Adds tasks, schedules, and preconditions to the specified pipeline."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/datapipeline/latest/APIReference/API_PutPipelineDefinition.html",
      "user": "Adds tasks, schedules, and preconditions to the specified pipeline."
    }
  },
  {
    "name": "DockerContainer",
    "description": "Docker containers are an isolated computing environment in which applications are run",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker can access any application and transmit traffic from the instance.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can access any application and transmit traffic from the instance."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker can connect to any local application allows for network transmissions from the instance.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can connect to any local application allows for network transmissions from the instance."
        }
      },
      {
        "name": "Terminate",
        "description": "The attacker can terminate the instance and any data on associated with it is deleted.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitigation": "Enable termination protection and do frequent backups. For more information, see https://aws.amazon.com/premiumsupport/knowledge-center/accidental-termination/.",
          "developer": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html",
          "mitre": "T1529 System Shutdown/Reboot",
          "stride": "Denial of Service",
          "user": "The attacker can terminate the instance and any data on associated with it is deleted."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Docker containers are an isolated computing environment in which applications are run"
    }
  },
  {
    "name": "DockerEngine",
    "description": "Docker Engine is the used container runtime in ECS",
    "attacksteps": [
      {
        "name": "CodeExecution",
        "description": "The attacker can execute arbitrary code in the application, assuming it's privileges.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "This attack steps specifically models the type of code injections which result in arbitrary code executions (e.g., buffer overflows), where the attacker can redirect the flow of execution, for example, by modifying program counter/instruction pointer of the host. (See CWE-94 on code injection <https://cwe.mitre.org/data/definitions/94.html> and, for example, CAPEC-100 on overflowing buffers <https://capec.mitre.org/data/definitions/100.html>)",
          "mitre": "T1210 Exploitation of Remote Services",
          "stride": "Tampering",
          "user": "The attacker can execute arbitrary code in the application, assuming it's privileges."
        }
      },
      {
        "name": "Deny",
        "description": "The attacker can deny some or all functionality and data pertaining to this service.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitre": "T1499 Endpoint Denial of Service",
          "stride": "Denial of Service",
          "user": "The attacker can deny some or all functionality and data pertaining to this service."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker has gained admin rights to the application.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker has gained admin rights to the application."
        }
      },
      {
        "name": "LocalConnect",
        "description": "The attacker has gained low-privilege access on the executing instance and can interact with the application.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1007 System Service Discovery",
          "user": "The attacker has gained low-privilege access on the executing instance and can interact with the application."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker has gained user rights to the application.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker has gained user rights to the application."
        }
      },
      {
        "name": "Modify",
        "description": "The attacker can modify some or all of this service's data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can modify some or all of this service's data."
        }
      },
      {
        "name": "NetworkRequestConnect",
        "description": "The attacker has successfully sent a request to the application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "The attacker has successfully sent a request to the application."
        }
      },
      {
        "name": "NetworkRespondConnect",
        "description": "An attacker might be able to respond with forged requests submitted by an application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "An attacker might be able to respond with forged requests submitted by an application."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read some or all of this service's code and data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "developer": "We don't model the services data, as we do not expect that information will be available to the parser. We also don't differentiate between service administrators and service users (e.g., mail service admins and users), as we have no information about the services.",
          "stride": "Information Disclosure",
          "user": "The attacker can read some or all of this service's code and data."
        }
      },
      {
        "name": "RequestForgery",
        "description": "The attacker can create or control transmissions from a vulnerable application.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker can create or control transmissions from a vulnerable application."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Docker Engine is the used container runtime in ECS"
    }
  },
  {
    "name": "DockerImage",
    "description": "Represents a docker image.",
    "attacksteps": [
      {
        "name": "CredentialCompromise",
        "description": "The attacker is able to get credentials that might be stored in the docker history or from docker inspect commands.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "stride": "Information Disclosure",
          "user": "The attacker is able to get credentials that might be stored in the docker history or from docker inspect commands."
        }
      },
      {
        "name": "DataCompromise",
        "description": "The attacker is able to compromise sensitive data that might be stored in the docker history or from docker inspect commands.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker is able to compromise sensitive data that might be stored in the docker history or from docker inspect commands."
        }
      }
    ],
    "metaInfo": {
      "user": "Represents a docker image."
    }
  },
  {
    "name": "DynamoDB",
    "description": "This asset represents the DynamoDB service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the DynamoDB service."
    }
  },
  {
    "name": "DynamoDBAPI",
    "description": "Represents the API of the DynamoDB service.",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "Invoke",
        "description": "Invoke the DynamoDB API.",
        "risktype": [],
        "metaInfo": {
          "user": "Invoke the DynamoDB API."
        }
      }
    ],
    "metaInfo": {
      "user": "Represents the API of the DynamoDB service."
    }
  },
  {
    "name": "DynamoDBBatchGetItem",
    "description": "The BatchGetItem operation returns the attributes of one or more items from one or more tables.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Returns the attributes of one or more items from one or more tables.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Returns the attributes of one or more items from one or more tables."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "The BatchGetItem operation returns the attributes of one or more items from one or more tables."
    }
  },
  {
    "name": "DynamoDBBatchWriteItem",
    "description": "The BatchWriteItem operation puts or deletes multiple items in one or more tables.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Puts or deletes multiple items in one or more tables.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Puts or deletes multiple items in one or more tables."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "The BatchWriteItem operation puts or deletes multiple items in one or more tables."
    }
  },
  {
    "name": "DynamoDBDeleteItem",
    "description": "Deletes a single item in a table by primary key.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Deletes a single item in a table by primary key.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Deletes a single item in a table by primary key."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Deletes a single item in a table by primary key."
    }
  },
  {
    "name": "DynamoDBDeleteTable",
    "description": "The DeleteTable operation deletes a table and all of its items.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Deletes a table and all of its items.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Deletes a table and all of its items."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "The DeleteTable operation deletes a table and all of its items."
    }
  },
  {
    "name": "DynamoDBGetItem",
    "description": "The GetItem operation returns a set of attributes for the item with the given primary key.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Returns a set of attributes for the item with the given primary key",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Returns a set of attributes for the item with the given primary key"
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "The GetItem operation returns a set of attributes for the item with the given primary key."
    }
  },
  {
    "name": "DynamoDBPutItem",
    "description": "Creates a new item, or replaces an old item with a new item.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Creates a new item, or replaces an old item with a new item.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Creates a new item, or replaces an old item with a new item."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Creates a new item, or replaces an old item with a new item."
    }
  },
  {
    "name": "DynamoDBQuery",
    "description": "The Query operation finds items based on primary key values.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Finds items based on primary key values.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Finds items based on primary key values."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "The Query operation finds items based on primary key values."
    }
  },
  {
    "name": "DynamoDBScan",
    "description": "The Scan operation returns one or more items and item attributes by accessing every item in a table or a secondary index.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Returns one or more items and item attributes by accessing every item in a table or a secondary index.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Returns one or more items and item attributes by accessing every item in a table or a secondary index."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "The Scan operation returns one or more items and item attributes by accessing every item in a table or a secondary index."
    }
  },
  {
    "name": "DynamoDBTable",
    "description": "A DynamoDB database table",
    "attacksteps": [
      {
        "name": "AuthenticatedDelete",
        "description": "The attacker is authenticated to access and delete the data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and delete the data."
        }
      },
      {
        "name": "AuthenticatedList",
        "description": "The attacker is authenticated to access and list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to access and list the data."
        }
      },
      {
        "name": "AuthenticatedRead",
        "description": "The attacker is authenticated to access and read the data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and read the data."
        }
      },
      {
        "name": "AuthenticatedWrite",
        "description": "The attacker is authenticated to access and write data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and write data."
        }
      },
      {
        "name": "Connect",
        "description": "Anyone can connect to any public table but the correct permissions are required to access the content.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Use Amazon VPC endpoints to restrict access to DynamoDB. For more information, see https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/vpc-endpoints-dynamodb.html.",
          "user": "Anyone can connect to any public table but the correct permissions are required to access the content."
        }
      },
      {
        "name": "Delete",
        "description": "The attacker can delete the data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1485 Data Destruction",
          "stride": "Tampering",
          "user": "The attacker can delete the data."
        }
      },
      {
        "name": "DenialOfService",
        "description": "The attacker is preventing regular access to the data.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "stride": "Denial of Service",
          "user": "The attacker is preventing regular access to the data."
        }
      },
      {
        "name": "List",
        "description": "The attacker can list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can list the data."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read the data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitre": "T1530 Data from Cloud Storage Object",
          "stride": "Information Disclosure",
          "user": "The attacker can read the data."
        }
      },
      {
        "name": "Write",
        "description": "The attacker can write to the location of the data, effectively deleting it.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1565 Data Manipulation",
          "stride": "Tampering",
          "user": "The attacker can write to the location of the data, effectively deleting it."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A DynamoDB database table"
    }
  },
  {
    "name": "DynamoDBUpdateItem",
    "description": "Edits an existing item's attributes, or adds a new item to the table if it does not already exist.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Edits an existing item's attributes, or adds a new item to the table if it does not already exist.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Edits an existing item's attributes, or adds a new item to the table if it does not already exist."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Edits an existing item's attributes, or adds a new item to the table if it does not already exist."
    }
  },
  {
    "name": "EC2",
    "description": "Represents the EC2 service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "Represents the EC2 service."
    }
  },
  {
    "name": "EC2AssociateIamInstanceProfile",
    "description": "Associates an EC2 instance with an instance profile.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Associates an EC2 instance with an instance profile.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Associates an EC2 instance with an instance profile."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Associates an EC2 instance with an instance profile."
    }
  },
  {
    "name": "EC2DisassociateIamInstanceProfile",
    "description": "Disassociates an EC2 instance with an instance profile.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Disassociates an EC2 instance with an instance profile.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Disassociates an EC2 instance with an instance profile."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Disassociates an EC2 instance with an instance profile."
    }
  },
  {
    "name": "EC2Instance",
    "description": "Represents an EC2 instance that runs on the Amazon Web Services (AWS) infrastructure.",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "GetRoleCredentials",
        "description": "The attacker can get access to the set of permissions that the attached instance profile or role has.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Follow the standard security advice of granting least privilege and consider using GuardDuty which triggers on this. See https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types.html#unauthorized11",
          "mitre": "T1552.005 Unsecured Credentials: Cloud Instance Metadata API",
          "stride": "Information Disclosure",
          "user": "The attacker can get access to the set of permissions that the attached instance profile or role has."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker has gained full control of the instance and can access any applications, transmit data and assume the permissions of the instance.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitigation": "Implement a threat detection service such as Amazon GuardDuty to detect malicious behaviour. For more information, see https://aws.amazon.com/guardduty/.",
          "developer": "With high privilege access the attacker can make valid requests to IMDSv2, bypassing the defense.",
          "stride": "Tampering",
          "user": "The attacker has gained full control of the instance and can access any applications, transmit data and assume the permissions of the instance."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker can connect to any local application allows for network transmissions from the instance.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can connect to any local application allows for network transmissions from the instance."
        }
      },
      {
        "name": "ModifyUserDataScript",
        "description": "The attacker can modify the user data script and execute any code as root when the machine is started.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "In practice, the machine must be stopped/started for the script to take effect.",
          "mitre": "T1037 Boot or Logon Initialization Scripts",
          "user": "The attacker can modify the user data script and execute any code as root when the machine is started."
        }
      },
      {
        "name": "StartSSMSession",
        "description": "The attacker can start a SSM session to the instance and execute any code on the machine.",
        "risktype": [],
        "metaInfo": {
          "developer": "In practice, the machine must have the SSM Agent installed and the correct instance profile.",
          "mitre": "T1021.004 Remote Services: SSH",
          "user": "The attacker can start a SSM session to the instance and execute any code on the machine."
        }
      },
      {
        "name": "Terminate",
        "description": "The attacker can terminate the instance and any data on associated with it is deleted.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitigation": "Enable termination protection and do frequent backups. For more information, see https://aws.amazon.com/premiumsupport/knowledge-center/accidental-termination/.",
          "developer": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html",
          "mitre": "T1529 System Shutdown/Reboot",
          "stride": "Denial of Service",
          "user": "The attacker can terminate the instance and any data on associated with it is deleted."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents an EC2 instance that runs on the Amazon Web Services (AWS) infrastructure."
    }
  },
  {
    "name": "EC2ModifyInstanceAttribute",
    "description": "Modifies the specified attribute of the specified instance.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Modifies the specified attribute of the specified instance.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Modifies the specified attribute of the specified instance."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Modifies the specified attribute of the specified instance."
    }
  },
  {
    "name": "EC2ReplaceIamInstanceProfileAssociation",
    "description": "Replaces the instance profile association of an EC2 instance.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Replaces the instance profile association of an EC2 instance.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Replaces the instance profile association of an EC2 instance."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Replaces the instance profile association of an EC2 instance."
    }
  },
  {
    "name": "EC2RunInstances",
    "description": "Starts one or more instances.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Starts one or more instances.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Starts one or more instances."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Starts one or more instances."
    }
  },
  {
    "name": "EC2TerminateInstances",
    "description": "Shuts down an instance.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Shuts down an instance.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Shuts down an instance."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Shuts down an instance."
    }
  },
  {
    "name": "ECR",
    "description": "This asset represents the ECR service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the ECR service."
    }
  },
  {
    "name": "ECRBatchCheckLayerAvailability",
    "description": "Check the availability of multiple image layers in a specified registry and repository.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Check the availability of multiple image layers in a specified registry and repository.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Check the availability of multiple image layers in a specified registry and repository."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Check the availability of multiple image layers in a specified registry and repository."
    }
  },
  {
    "name": "ECRBatchGetImage",
    "description": "Gets detailed information for specified images within a specified repository. Images are specified with either imageTag or imageDigest.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Gets detailed information for specified images within a specified repository.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Gets detailed information for specified images within a specified repository."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Gets detailed information for specified images within a specified repository. Images are specified with either imageTag or imageDigest."
    }
  },
  {
    "name": "ECRCompleteLayerUpload",
    "description": "Informs Amazon ECR that the image layer upload has completed for a specified registry, repository name, and upload ID. You can optionally provide a sha256 digest of the image layer for data validation purposes",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Informs Amazon ECR that the image layer upload has completed for a specified registry, repository name, and upload ID.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Informs Amazon ECR that the image layer upload has completed for a specified registry, repository name, and upload ID."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Informs Amazon ECR that the image layer upload has completed for a specified registry, repository name, and upload ID. You can optionally provide a sha256 digest of the image layer for data validation purposes"
    }
  },
  {
    "name": "ECRGetAuthorizationToken",
    "description": "Get a base64 authorization token used for authenticating with an ECR registry.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Get a base64 authorization token used for authenticating with an ECR registry.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Get a base64 authorization token used for authenticating with an ECR registry."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Get a base64 authorization token used for authenticating with an ECR registry."
    }
  },
  {
    "name": "ECRGetDownloadUrlForLayer",
    "description": "Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You can only get URLs for image layers that are referenced in an image.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You can only get URLs for image layers that are referenced in an image."
    }
  },
  {
    "name": "ECRInitiateLayerUpload",
    "description": "Notify Amazon ECR that you intend to upload an image layer.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Notify Amazon ECR that you intend to upload an image layer.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Notify Amazon ECR that you intend to upload an image layer."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Notify Amazon ECR that you intend to upload an image layer."
    }
  },
  {
    "name": "ECRPutImage",
    "description": "Creates or updates the image manifest and tags associated with an image.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Creates or updates the image manifest and tags associated with an image.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Creates or updates the image manifest and tags associated with an image."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Creates or updates the image manifest and tags associated with an image."
    }
  },
  {
    "name": "ECRRegistry",
    "description": "An ECR registry is tied to an AWS account",
    "attacksteps": [
      {
        "name": "Authenticate",
        "description": "The attacker has gained authenticated access to the registry.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker has gained authenticated access to the registry."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "An ECR registry is tied to an AWS account"
    }
  },
  {
    "name": "ECRRepository",
    "description": "A repository stores container images",
    "attacksteps": [
      {
        "name": "PoisonRepository",
        "description": "The attacker can inject arbitrary code into images, effectively compromising all containers using those images.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitigation": "Restrict access to ECR with IAM and resource-based access policies including restrictions based on source IP address or specific VPCs. For more information, see: https://docs.aws.amazon.com/AmazonECR/latest/userguide/security.html.",
          "mitre": "T1525 Implant Container Image",
          "stride": "Tampering",
          "user": "The attacker can inject arbitrary code into images, effectively compromising all containers using those images."
        }
      },
      {
        "name": "PullAccess",
        "description": "The attacker can pull images from the repository, possibly getting access to sensitive data or credentials.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Restrict access to ECR with IAM and resource-based access policies including restrictions based on source IP address or specific VPCs. For more information, see: https://docs.aws.amazon.com/AmazonECR/latest/userguide/security.html.",
          "stride": "Information Disclosure",
          "user": "The attacker can pull images from the repository, possibly getting access to sensitive data or credentials."
        }
      },
      {
        "name": "PushAccess",
        "description": "The attacker can push images to the repository, possibly containing malicious code.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitigation": "Restrict access to ECR with IAM and resource-based access policies including restrictions based on source IP address or specific VPCs. For more information, see: https://docs.aws.amazon.com/AmazonECR/latest/userguide/security.html.",
          "user": "The attacker can push images to the repository, possibly containing malicious code."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A repository stores container images"
    }
  },
  {
    "name": "ECRUploadLayerPart",
    "description": "Uploads an image layer part to Amazon ECR.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Uploads an image layer part to Amazon ECR.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Uploads an image layer part to Amazon ECR."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Uploads an image layer part to Amazon ECR."
    }
  },
  {
    "name": "ECS",
    "description": "This asset represents the ECS service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the ECS service."
    }
  },
  {
    "name": "ECSCluster",
    "description": "An ECS Cluster is a logical grouping of EC2 instances (for the EC2 launch type) acting as a single computational unit",
    "attacksteps": [
      {
        "name": "Delete",
        "description": "The attacker deletes all cluster resources and terminates its instances.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1489 Service Stop",
          "stride": "Denial of Service",
          "user": "The attacker deletes all cluster resources and terminates its instances."
        }
      },
      {
        "name": "DeleteServices",
        "description": "The attacker can delete ECS services and its running tasks.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1489 Service Stop",
          "stride": "Denial of Service",
          "user": "The attacker can delete ECS services and its running tasks."
        }
      },
      {
        "name": "DeregisterContainerInstances",
        "description": "The attacker is able to deregister instances from the cluster.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1489 Service Stop",
          "stride": "Denial of Service",
          "user": "The attacker is able to deregister instances from the cluster."
        }
      },
      {
        "name": "StopTasks",
        "description": "The attacker can stop tasks in the cluster.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1489 Service Stop",
          "stride": "Denial of Service",
          "user": "The attacker can stop tasks in the cluster."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "An ECS Cluster is a logical grouping of EC2 instances (for the EC2 launch type) acting as a single computational unit"
    }
  },
  {
    "name": "ECSDeleteCluster",
    "description": "Deletes the cluster and all its resources.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Deletes the cluster and all its resources.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Deletes the cluster and all its resources."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Deletes the cluster and all its resources."
    }
  },
  {
    "name": "ECSDeleteService",
    "description": "Deletes ECS services.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Deletes ECS services.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Deletes ECS services."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Deletes ECS services."
    }
  },
  {
    "name": "ECSDeregisterContainerInstance",
    "description": "Deregisters instances from the cluster.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Deregisters instances from the cluster.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Deregisters instances from the cluster."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Deregisters instances from the cluster."
    }
  },
  {
    "name": "ECSService",
    "description": "An ECS service maintains a certain number of replicas of a task in the cluster",
    "attacksteps": [
      {
        "name": "Delete",
        "description": "The attacker has deleted the service.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1489 Service Stop",
          "stride": "Denial of Service",
          "user": "The attacker has deleted the service."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "An ECS service maintains a certain number of replicas of a task in the cluster"
    }
  },
  {
    "name": "ECSStopTask",
    "description": "Stops tasks running in the cluster.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Stops tasks running in the cluster.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Stops tasks running in the cluster."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Stops tasks running in the cluster."
    }
  },
  {
    "name": "ECSTask",
    "description": "Tasks are a grouping of containers which are deployed in the cluster",
    "attacksteps": [
      {
        "name": "Stop",
        "description": "The attacker has stopped the task.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitre": "T1489 Service Stop",
          "stride": "Denial of Service",
          "user": "The attacker has stopped the task."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Tasks are a grouping of containers which are deployed in the cluster"
    }
  },
  {
    "name": "ElasticIP",
    "description": "An Elastic IP address is a static, public IPv4 address, which is reachable from the internet.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "An Elastic IP address is a static, public IPv4 address, which is reachable from the internet."
    }
  },
  {
    "name": "EncryptableData",
    "description": "Represents any form of stored or transmitted data that can be encypted.",
    "attacksteps": [
      {
        "name": "AuthenticatedDecrypt",
        "description": "The attacker is authenticated to decrypt encrypted data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to decrypt encrypted data."
        }
      },
      {
        "name": "AuthenticatedDelete",
        "description": "The attacker is authenticated to access and delete the data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and delete the data."
        }
      },
      {
        "name": "AuthenticatedEncrypt",
        "description": "The attacker is authenticated to encrypt and write the encrypted data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to encrypt and write the encrypted data."
        }
      },
      {
        "name": "AuthenticatedList",
        "description": "The attacker is authenticated to access and list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to access and list the data."
        }
      },
      {
        "name": "AuthenticatedRead",
        "description": "The attacker is authenticated to access and read the data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and read the data."
        }
      },
      {
        "name": "AuthenticatedWrite",
        "description": "The attacker is authenticated to access and write data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and write data."
        }
      },
      {
        "name": "Delete",
        "description": "The attacker can delete the data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1485 Data Destruction",
          "stride": "Tampering",
          "user": "The attacker can delete the data."
        }
      },
      {
        "name": "DenialOfService",
        "description": "The attacker is preventing regular access to the data.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "stride": "Denial of Service",
          "user": "The attacker is preventing regular access to the data."
        }
      },
      {
        "name": "Encrypt",
        "description": "The attacker is able to encrypt the data to interrupt availability or extortion.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1486 Data Encrypted for Impact",
          "user": "The attacker is able to encrypt the data to interrupt availability or extortion."
        }
      },
      {
        "name": "List",
        "description": "The attacker can list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can list the data."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read the data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "stride": "Information Disclosure",
          "user": "The attacker can read the data."
        }
      },
      {
        "name": "Write",
        "description": "The attacker can write to the location of the data, effectively deleting it.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1565 Data Manipulation",
          "stride": "Tampering",
          "user": "The attacker can write to the location of the data, effectively deleting it."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents any form of stored or transmitted data that can be encypted."
    }
  },
  {
    "name": "Glue",
    "description": "This asset represents the Glue service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the Glue service."
    }
  },
  {
    "name": "GlueCreateDevEndpoint",
    "description": "Creates a new development endpoint.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Creates a new development endpoint.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Creates a new development endpoint."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/cli/latest/reference/glue/create-dev-endpoint.html",
      "user": "Creates a new development endpoint."
    }
  },
  {
    "name": "HTTPAPI",
    "description": "This asset represents a HTTP API connected to the API Gateway.",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "Invoke",
        "description": "The attacker is attempting to invoke APIs via API Gateway.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is attempting to invoke APIs via API Gateway."
        }
      }
    ],
    "metaInfo": {
      "user": "This asset represents a HTTP API connected to the API Gateway."
    }
  },
  {
    "name": "HTTPAPIMethod",
    "description": "HTTP API methods send requests to AWS Lambda functions or to any routable HTTP endpoint.",
    "attacksteps": [
      {
        "name": "Invoke",
        "description": "The attacker can invoke the API method.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can invoke the API method."
        }
      },
      {
        "name": "MalformedInvoke",
        "description": "The attacker can invoke integrations with malformed input.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker can invoke integrations with malformed input."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "HTTP API methods send requests to AWS Lambda functions or to any routable HTTP endpoint."
    }
  },
  {
    "name": "IAM",
    "description": "This asset represents the IAM service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the IAM service."
    }
  },
  {
    "name": "IAMAddRoleToInstanceProfile",
    "description": "An attacker can use this to add roles to instance profiles, potentially leading to escalated privileges.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Add an IAM Role to an IAM instance profile.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Add an IAM Role to an IAM instance profile."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "An attacker can use this to add roles to instance profiles, potentially leading to escalated privileges."
    }
  },
  {
    "name": "IAMCreateAccessKey",
    "description": "An attacker with this permission can create an access key secret access key pair for another user (unless 2 pairs exist).",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Create an access key secret access key pair for another user (unless 2 pairs exist).",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Create an access key secret access key pair for another user (unless 2 pairs exist)."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "An attacker with this permission can create an access key secret access key pair for another user (unless 2 pairs exist)."
    }
  },
  {
    "name": "IAMCreateLoginProfile",
    "description": "An attacker can use this permission to create a console login password for a non-console user.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Create a console login password for a non-console user.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Create a console login password for a non-console user."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "An attacker can use this permission to create a console login password for a non-console user."
    }
  },
  {
    "name": "IAMDeleteAccessKey",
    "description": "Deletes the access key pair associated with the specified IAM user.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Deletes the access key pair associated with the specified IAM user.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Deletes the access key pair associated with the specified IAM user."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Deletes the access key pair associated with the specified IAM user."
    }
  },
  {
    "name": "IAMDeleteLoginProfile",
    "description": "An attacker can use this permission to delete the existing console login password of other users.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Delete the existing console login password of other users.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Delete the existing console login password of other users."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "An attacker can use this permission to delete the existing console login password of other users."
    }
  },
  {
    "name": "IAMGroup",
    "description": "An IAM group consists of a set of IAM users",
    "attacksteps": [
      {
        "name": "Assume",
        "description": "The attacker has assumed the IAM identity and can perform all actions allowed through policies, groups and roles.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "This step collects all actions available to an Identity. Then, it removes all actions with any associations to a deny statement (the set difference), leaving only allowed actions left. Furthermore, using the collected actions it will also trace back to applicable policy statements for the current identity.",
          "mitre": "T1078.004 Valid Accounts: Cloud Accounts",
          "stride": "Spoofing",
          "user": "The attacker has assumed the IAM identity and can perform all actions allowed through policies, groups and roles."
        }
      },
      {
        "name": "AssumeRoleViaCloudFormation",
        "description": "The attacker can escalate privileges through PassRole and CreateStack that will perform actions and create resources with CloudFormation using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole and CreateStack that will perform actions and create resources with CloudFormation using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaCodeStar",
        "description": "The attacker can escalate privileges through PassRole and CreateProject by deploying resources with CodeStar using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole and CreateProject by deploying resources with CodeStar using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaDataPipeline",
        "description": "The attacker can escalate privileges through PassRole, CreatePipeline, PutPipelineDefinition by creating a pipeline and updating it to run an arbitrary AWS CLI command using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreatePipeline, PutPipelineDefinition by creating a pipeline and updating it to run an arbitrary AWS CLI command using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaGlue",
        "description": "The attacker can escalate privileges through PassRole and CreateDevEndpoint by creating a Glue development endpoint and pass an existing role to it, SSH into the instance and use the AWS CLI with the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole and CreateDevEndpoint by creating a Glue development endpoint and pass an existing role to it, SSH into the instance and use the AWS CLI with the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaLambdaCreateFunction",
        "description": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaLambdaUpdateFunction",
        "description": "The attacker can escalate privileges through UpdateFunction that will execute code in Lambda using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through UpdateFunction that will execute code in Lambda using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaLambdaUpdateFunctionConfiguration",
        "description": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaSageMaker",
        "description": "The attacker can escalate privileges through PassRole, CreateNotebookInstance, CreatePresignedNotebookInstanceUrl by by creating a new Jupyter notebook, gaining access to it, then using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreateNotebookInstance, CreatePresignedNotebookInstanceUrl by by creating a new Jupyter notebook, gaining access to it, then using the permissions of the passed role."
        }
      },
      {
        "name": "PassRole",
        "description": "The attacker is able to pass IAM roles from the IAM identity to other services for privilege escalation.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement restrictions to ensure that only the essential IAM roles can be passed.",
          "stride": "Elevation of Privilege",
          "user": "The attacker is able to pass IAM roles from the IAM identity to other services for privilege escalation."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html",
      "user": "An IAM group consists of a set of IAM users"
    }
  },
  {
    "name": "IAMInstanceProfile",
    "description": "An instance profile is used to associate IAM roles to EC2 instances.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "An instance profile is used to associate IAM roles to EC2 instances."
    }
  },
  {
    "name": "IAMPassRole",
    "description": "An attacker can use this to pass roles to AWS services, potentially leading to escalated privileges.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Pass an IAM Role to an AWS service.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Pass an IAM Role to an AWS service."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "An attacker can use this to pass roles to AWS services, potentially leading to escalated privileges."
    }
  },
  {
    "name": "IAMRole",
    "description": "An IAM role can be utilized by either a person or an application for authentication. An attacker can assume all permissions of an IAM role e.g., via a compromised EC2 instance.",
    "attacksteps": [
      {
        "name": "Assume",
        "description": "The attacker is able to assume the role and perform all allowed actions.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitigation": "Follow the standard security advice of granting least privilege, or granting only the permissions required to perform a task.",
          "developer": "This step collects all actions available to an Identity. Then, it removes all actions with any associations to a deny statement (the set difference), leaving only allowed actions left. Furthermore, using the collected actions it will also trace back to applicable policy statements for the current identity.",
          "mitre": "T1078.004 Valid Accounts: Cloud Accounts",
          "stride": "Spoofing",
          "user": "The attacker is able to assume the role and perform all allowed actions."
        }
      },
      {
        "name": "AssumeRoleViaCloudFormation",
        "description": "The attacker can escalate privileges through PassRole and CreateStack that will perform actions and create resources with CloudFormation using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole and CreateStack that will perform actions and create resources with CloudFormation using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaCodeStar",
        "description": "The attacker can escalate privileges through PassRole and CreateProject by deploying resources with CodeStar using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole and CreateProject by deploying resources with CodeStar using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaDataPipeline",
        "description": "The attacker can escalate privileges through PassRole, CreatePipeline, PutPipelineDefinition by creating a pipeline and updating it to run an arbitrary AWS CLI command using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreatePipeline, PutPipelineDefinition by creating a pipeline and updating it to run an arbitrary AWS CLI command using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaGlue",
        "description": "The attacker can escalate privileges through PassRole and CreateDevEndpoint by creating a Glue development endpoint and pass an existing role to it, SSH into the instance and use the AWS CLI with the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole and CreateDevEndpoint by creating a Glue development endpoint and pass an existing role to it, SSH into the instance and use the AWS CLI with the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaLambdaCreateFunction",
        "description": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaLambdaUpdateFunction",
        "description": "The attacker can escalate privileges through UpdateFunction that will execute code in Lambda using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through UpdateFunction that will execute code in Lambda using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaLambdaUpdateFunctionConfiguration",
        "description": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaSageMaker",
        "description": "The attacker can escalate privileges through PassRole, CreateNotebookInstance, CreatePresignedNotebookInstanceUrl by by creating a new Jupyter notebook, gaining access to it, then using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreateNotebookInstance, CreatePresignedNotebookInstanceUrl by by creating a new Jupyter notebook, gaining access to it, then using the permissions of the passed role."
        }
      },
      {
        "name": "PassRole",
        "description": "The attacker is able to pass IAM roles to other services for privilege escalation.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement restrictions to ensure that only the essential IAM roles can be passed.",
          "stride": "Elevation of Privilege",
          "user": "The attacker is able to pass IAM roles to other services for privilege escalation."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html",
      "user": "An IAM role can be utilized by either a person or an application for authentication. An attacker can assume all permissions of an IAM role e.g., via a compromised EC2 instance."
    }
  },
  {
    "name": "IAMUpdateAccessKey",
    "description": "An attacker with this permission can activate an inactive access key pair for another user.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Activate an inactive access key pair for another user.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Activate an inactive access key pair for another user."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "An attacker with this permission can activate an inactive access key pair for another user."
    }
  },
  {
    "name": "IAMUpdateLoginProfile",
    "description": "An attacker can use this permission to change the existing console login password of other users.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Change the existing console login password of other users.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Change the existing console login password of other users."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "An attacker can use this permission to change the existing console login password of other users."
    }
  },
  {
    "name": "IAMUser",
    "description": "An IAM user can be utilized by either a person or an application for authentication. An attacker can assume all permissions of a compromised IAM user.",
    "attacksteps": [
      {
        "name": "Assume",
        "description": "The attacker is able to assume the user account and perform all allowed actions.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitigation": "Follow the standard security advice of granting least privilege, or use groups to assign permissions to IAM users.",
          "developer": "This step collects all actions available to an Identity. Then, it removes all actions with any associations to a deny statement (the set difference), leaving only allowed actions left. Furthermore, using the collected actions it will also trace back to applicable policy statements for the current identity.",
          "mitre": "T1078.004 Valid Accounts: Cloud Accounts",
          "stride": "Spoofing",
          "user": "The attacker is able to assume the user account and perform all allowed actions."
        }
      },
      {
        "name": "AssumeRoleViaCloudFormation",
        "description": "The attacker can escalate privileges through PassRole and CreateStack that will perform actions and create resources with CloudFormation using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole and CreateStack that will perform actions and create resources with CloudFormation using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaCodeStar",
        "description": "The attacker can escalate privileges through PassRole and CreateProject by deploying resources with CodeStar using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole and CreateProject by deploying resources with CodeStar using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaDataPipeline",
        "description": "The attacker can escalate privileges through PassRole, CreatePipeline, PutPipelineDefinition by creating a pipeline and updating it to run an arbitrary AWS CLI command using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreatePipeline, PutPipelineDefinition by creating a pipeline and updating it to run an arbitrary AWS CLI command using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaGlue",
        "description": "The attacker can escalate privileges through PassRole and CreateDevEndpoint by creating a Glue development endpoint and pass an existing role to it, SSH into the instance and use the AWS CLI with the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole and CreateDevEndpoint by creating a Glue development endpoint and pass an existing role to it, SSH into the instance and use the AWS CLI with the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaLambdaCreateFunction",
        "description": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaLambdaUpdateFunction",
        "description": "The attacker can escalate privileges through UpdateFunction that will execute code in Lambda using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through UpdateFunction that will execute code in Lambda using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaLambdaUpdateFunctionConfiguration",
        "description": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreateFunction and InvokeFunction that will execute code in Lambda using the permissions of the passed role."
        }
      },
      {
        "name": "AssumeRoleViaSageMaker",
        "description": "The attacker can escalate privileges through PassRole, CreateNotebookInstance, CreatePresignedNotebookInstanceUrl by by creating a new Jupyter notebook, gaining access to it, then using the permissions of the passed role.",
        "risktype": [],
        "metaInfo": {
          "stride": "Elevation of Privilege",
          "user": "The attacker can escalate privileges through PassRole, CreateNotebookInstance, CreatePresignedNotebookInstanceUrl by by creating a new Jupyter notebook, gaining access to it, then using the permissions of the passed role."
        }
      },
      {
        "name": "ConsoleLogin",
        "description": "The attacker is able to login through the AWS console with the IAM user's credentials.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1538 Cloud Service Dashboard",
          "user": "The attacker is able to login through the AWS console with the IAM user's credentials."
        }
      },
      {
        "name": "CreateAccessKey",
        "description": "The attacker can create a new access key pair for the IAM user, and use it to assume the user.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can create a new access key pair for the IAM user, and use it to assume the user."
        }
      },
      {
        "name": "CreateLoginProfile",
        "description": "The attacker can create a new login profile for this user, and use it to assume this user.",
        "risktype": [],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can create a new login profile for this user, and use it to assume this user."
        }
      },
      {
        "name": "DeleteAccessKey",
        "description": "The attacker can delete an access key pair of this user to enable creating a new access key pair.",
        "risktype": [],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can delete an access key pair of this user to enable creating a new access key pair."
        }
      },
      {
        "name": "DeleteLoginProfile",
        "description": "The attacker can delete the login profile of this user to enable creating a new login profile.",
        "risktype": [],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can delete the login profile of this user to enable creating a new login profile."
        }
      },
      {
        "name": "MFAPhishing",
        "description": "The attacker has intercepted a virtual MFA token by standing as a man-in-the-middle between the IAM user and a AWS console phishing page.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Require hardware multi-factor authentication for IAM users in the account.",
          "developer": "https://rhinosecuritylabs.com/aws/mfa-phishing-on-aws/",
          "mitre": "T1111 Two-Factor Authentication Interception",
          "user": "The attacker has intercepted a virtual MFA token by standing as a man-in-the-middle between the IAM user and a AWS console phishing page."
        }
      },
      {
        "name": "PassRole",
        "description": "The attacker is able to pass IAM roles from the IAM user to other services for privilege escalation.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement restrictions to ensure that only the essential IAM roles can be passed.",
          "stride": "Tampering",
          "user": "The attacker is able to pass IAM roles from the IAM user to other services for privilege escalation."
        }
      },
      {
        "name": "UpdateAccessKey",
        "description": "The attacker can update the state of an access key pair of this user from inactive to active.",
        "risktype": [],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can update the state of an access key pair of this user from inactive to active."
        }
      },
      {
        "name": "UpdateLoginProfile",
        "description": "The attacker can update the existing login profile for this user, and use it to assume this user.",
        "risktype": [],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can update the existing login profile for this user, and use it to assume this user."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html",
      "user": "An IAM user can be utilized by either a person or an application for authentication. An attacker can assume all permissions of a compromised IAM user."
    }
  },
  {
    "name": "IdentityBasedAllowStatement",
    "description": "An identity-based statement which explicitly allows an action.",
    "attacksteps": [
      {
        "name": "Satisfy",
        "description": "The attacker has satisfied the conditions to execute the actions of the statement.",
        "risktype": [],
        "metaInfo": {
          "developer": "Satisfy is only activated when a statement is called both from an action and a principal. This allows for a higher degree of traceability between policies, statements, principals, and performed actions.",
          "user": "The attacker has satisfied the conditions to execute the actions of the statement."
        }
      }
    ],
    "metaInfo": {
      "developer": "All instances of identity-based statements should only point to the ARN of the associated instance and the applicable global actions.",
      "user": "An identity-based statement which explicitly allows an action."
    }
  },
  {
    "name": "IdentityBasedDenyStatement",
    "description": "An identity-based statement which explicitly denies an action.",
    "attacksteps": [
      {
        "name": "Satisfy",
        "description": "The attacker has satisfied the conditions to execute the actions of the statement.",
        "risktype": [],
        "metaInfo": {
          "developer": "Satisfy is only activated when a statement is called both from an action and a principal. This allows for a higher degree of traceability between policies, statements, principals, and performed actions.",
          "user": "The attacker has satisfied the conditions to execute the actions of the statement."
        }
      }
    ],
    "metaInfo": {
      "developer": "All instances of identity-based statements should only point to the ARN of the associated instance and the applicable global actions.",
      "user": "An identity-based statement which explicitly denies an action."
    }
  },
  {
    "name": "IdentityBasedInlinePolicy",
    "description": "A policy is an entity in AWS that, when associated with an identity or resource, defines their permissions.",
    "attacksteps": [
      {
        "name": "Satisfy",
        "description": "The policy has been successfully used by the attacker.",
        "risktype": [],
        "metaInfo": {
          "user": "The policy has been successfully used by the attacker."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A policy is an entity in AWS that, when associated with an identity or resource, defines their permissions."
    }
  },
  {
    "name": "IdentityBasedManagedPolicy",
    "description": "A policy is an entity in AWS that, when associated with an identity or resource, defines their permissions.",
    "attacksteps": [
      {
        "name": "Satisfy",
        "description": "The policy has been successfully used by the attacker.",
        "risktype": [],
        "metaInfo": {
          "user": "The policy has been successfully used by the attacker."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A policy is an entity in AWS that, when associated with an identity or resource, defines their permissions."
    }
  },
  {
    "name": "InboundNetworkACLRule",
    "description": "Represents a network ACL rule associated with a network ACL.",
    "attacksteps": [],
    "metaInfo": {
      "user": "Represents a network ACL rule associated with a network ACL."
    }
  },
  {
    "name": "InboundSecurityGroupRule",
    "description": "Represents a security group rule that specifies allowed incoming and outgoing traffic.",
    "attacksteps": [],
    "metaInfo": {
      "user": "Represents a security group rule that specifies allowed incoming and outgoing traffic."
    }
  },
  {
    "name": "Internet",
    "description": "Represents the Internet.",
    "attacksteps": [],
    "metaInfo": {
      "user": "Represents the Internet."
    }
  },
  {
    "name": "InternetGateway",
    "description": "An internet gateway is a horizontally scaled, redundant, and highly available VPC component that allows communication between instances in your VPC and the internet.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "An internet gateway is a horizontally scaled, redundant, and highly available VPC component that allows communication between instances in your VPC and the internet."
    }
  },
  {
    "name": "KMS",
    "description": "This asset represents the KMS service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the KMS service."
    }
  },
  {
    "name": "KMSDecrypt",
    "description": "Decrypts ciphertext that was encrypted by a AWS KMS customer master key (CMK).",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Decrypts ciphertext that was encrypted by a AWS KMS customer master key (CMK).",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Decrypts ciphertext that was encrypted by a AWS KMS customer master key (CMK)."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Decrypts ciphertext that was encrypted by a AWS KMS customer master key (CMK)."
    }
  },
  {
    "name": "KMSEncrypt",
    "description": "Encrypts plaintext into ciphertext by using a customer master key (CMK).",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Encrypts plaintext into ciphertext by using a customer master key (CMK).",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Encrypts plaintext into ciphertext by using a customer master key (CMK)."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Encrypts plaintext into ciphertext by using a customer master key (CMK)."
    }
  },
  {
    "name": "KMSGenerateDataKey",
    "description": "Generates a unique symmetric data key for client-side encryption.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Generates a unique symmetric data key for client-side encryption.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Generates a unique symmetric data key for client-side encryption."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Generates a unique symmetric data key for client-side encryption."
    }
  },
  {
    "name": "KMSGenerateDataKeyPair",
    "description": "Generates a unique asymmetric data key pair.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Generates a unique asymmetric data key pair.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Generates a unique asymmetric data key pair."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Generates a unique asymmetric data key pair."
    }
  },
  {
    "name": "KMSGenerateDataKeyPairWithoutPlaintext",
    "description": "Generates a unique asymmetric data key pair.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Generates a unique asymmetric data key pair.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Generates a unique asymmetric data key pair."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Generates a unique asymmetric data key pair."
    }
  },
  {
    "name": "KMSGenerateDataKeyWithoutPlaintext",
    "description": "Generates a unique symmetric data key.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Generates a unique symmetric data key.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Generates a unique symmetric data key."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Generates a unique symmetric data key."
    }
  },
  {
    "name": "Lambda",
    "description": "This asset represents the Lambda service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the Lambda service."
    }
  },
  {
    "name": "LambdaCreateFunction",
    "description": "Creates a new Lambda function.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Creates a new Lambda function.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Creates a new Lambda function."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html",
      "user": "Creates a new Lambda function."
    }
  },
  {
    "name": "LambdaDeleteFunction",
    "description": "Deletes an existing Lambda function.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Deletes an existing Lambda function.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Deletes an existing Lambda function."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteFunction.html",
      "user": "Deletes an existing Lambda function."
    }
  },
  {
    "name": "LambdaFunction",
    "description": "This asset represents a Lambda function.",
    "attacksteps": [
      {
        "name": "Delete",
        "description": "The attacker can delete the Lambda function.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can delete the Lambda function."
        }
      },
      {
        "name": "InputManipulation",
        "description": "The attacker has manipulated the input to the lambda function.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker has manipulated the input to the lambda function."
        }
      },
      {
        "name": "Invoke",
        "description": "The attacker can invoke the lambda function.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Configure granular access to lambda functions with least privileges. For more information, see https://aws.amazon.com/premiumsupport/knowledge-center/granular-access-lambda/.",
          "user": "The attacker can invoke the lambda function."
        }
      },
      {
        "name": "InvokeUpdatedFunction",
        "description": "The attacker is able to invoke a lambda function with arbitrary code running, effectively assuming the execution role of the function.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitigation": "Configure granular access to lambda functions with least privileges. For more information, see https://aws.amazon.com/premiumsupport/knowledge-center/granular-access-lambda/.",
          "stride": "Tampering",
          "user": "The attacker is able to invoke a lambda function with arbitrary code running, effectively assuming the execution role of the function."
        }
      },
      {
        "name": "MalformedInvoke",
        "description": "The attacker can invoke the lambda function with malformed input.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker can invoke the lambda function with malformed input."
        }
      },
      {
        "name": "UpdateCode",
        "description": "The attacker can inject arbitrary code to the lambda function.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitigation": "Configure granular access to lambda functions with least privileges. For more information, see https://aws.amazon.com/premiumsupport/knowledge-center/granular-access-lambda/.",
          "stride": "Tampering",
          "user": "The attacker can inject arbitrary code to the lambda function."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "This asset represents a Lambda function."
    }
  },
  {
    "name": "LambdaInvokeFunction",
    "description": "Invokes an existing Lambda function.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Invokes an existing Lambda function.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Invokes an existing Lambda function."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html",
      "user": "Invokes an existing Lambda function."
    }
  },
  {
    "name": "LambdaUpdateFunctionCode",
    "description": "Updates the code of an existing Lambda functions.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Updates the code of an existing Lambda functions.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Updates the code of an existing Lambda functions."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionCode.html",
      "user": "Updates the code of an existing Lambda functions."
    }
  },
  {
    "name": "LambdaUpdateFunctionConfiguration",
    "description": "Modify the version-specific settings of a Lambda function.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Modify the version-specific settings of a Lambda function.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Modify the version-specific settings of a Lambda function."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionConfiguration.html",
      "user": "Modify the version-specific settings of a Lambda function."
    }
  },
  {
    "name": "LoadBalancer",
    "description": "A Load Balancer Instance is an Instance that hosts the Load Balancer service",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker can access any application and transmit traffic from the instance.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can access any application and transmit traffic from the instance."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker can connect to any local application allows for network transmissions from the instance.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can connect to any local application allows for network transmissions from the instance."
        }
      },
      {
        "name": "Terminate",
        "description": "The attacker can terminate the instance and any data on associated with it is deleted.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitigation": "Enable termination protection and do frequent backups. For more information, see https://aws.amazon.com/premiumsupport/knowledge-center/accidental-termination/.",
          "developer": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html",
          "mitre": "T1529 System Shutdown/Reboot",
          "stride": "Denial of Service",
          "user": "The attacker can terminate the instance and any data on associated with it is deleted."
        }
      }
    ],
    "metaInfo": {
      "modeler": "A Load Balancer Instance should be treated as an EC2 Instance to represent the underlying host of the Load Balancer",
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A Load Balancer Instance is an Instance that hosts the Load Balancer service"
    }
  },
  {
    "name": "LoadBalancerListener",
    "description": "A listener of a load balancer that listens for incoming traffic.",
    "attacksteps": [
      {
        "name": "CodeExecution",
        "description": "The attacker can execute arbitrary code in the application, assuming it's privileges.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "This attack steps specifically models the type of code injections which result in arbitrary code executions (e.g., buffer overflows), where the attacker can redirect the flow of execution, for example, by modifying program counter/instruction pointer of the host. (See CWE-94 on code injection <https://cwe.mitre.org/data/definitions/94.html> and, for example, CAPEC-100 on overflowing buffers <https://capec.mitre.org/data/definitions/100.html>)",
          "mitre": "T1210 Exploitation of Remote Services",
          "stride": "Tampering",
          "user": "The attacker can execute arbitrary code in the application, assuming it's privileges."
        }
      },
      {
        "name": "Deny",
        "description": "The attacker can deny some or all functionality and data pertaining to this service.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitre": "T1499 Endpoint Denial of Service",
          "stride": "Denial of Service",
          "user": "The attacker can deny some or all functionality and data pertaining to this service."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker has gained admin rights to the application.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker has gained admin rights to the application."
        }
      },
      {
        "name": "LocalConnect",
        "description": "The attacker has gained low-privilege access on the executing instance and can interact with the application.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1007 System Service Discovery",
          "user": "The attacker has gained low-privilege access on the executing instance and can interact with the application."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker has gained user rights to the application.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker has gained user rights to the application."
        }
      },
      {
        "name": "Modify",
        "description": "The attacker can modify some or all of this service's data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can modify some or all of this service's data."
        }
      },
      {
        "name": "NetworkRequestConnect",
        "description": "The attacker can send requests to the application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security groups, ACLs, load balancers and gateways.",
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker can send requests to the application."
        }
      },
      {
        "name": "NetworkRespondConnect",
        "description": "An attacker might be able to respond with forged requests submitted by an application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "An attacker might be able to respond with forged requests submitted by an application."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read some or all of this service's code and data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "developer": "We don't model the services data, as we do not expect that information will be available to the parser. We also don't differentiate between service administrators and service users (e.g., mail service admins and users), as we have no information about the services.",
          "stride": "Information Disclosure",
          "user": "The attacker can read some or all of this service's code and data."
        }
      },
      {
        "name": "RequestForgery",
        "description": "The attacker can create or control transmissions from a vulnerable application.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker can create or control transmissions from a vulnerable application."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A listener of a load balancer that listens for incoming traffic."
    }
  },
  {
    "name": "LoadBalancerNetworkInterface",
    "description": "Network interfaces associated with load balancers.",
    "attacksteps": [
      {
        "name": "RespondConnect",
        "description": "The attacker is able to spoof the server, in case a client submits a request.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "As we do not model clients, with some limited probability, this attack step leads directly to the possibility to connect to an application.",
          "stride": "Spoofing",
          "user": "The attacker is able to spoof the server, in case a client submits a request."
        }
      },
      {
        "name": "TransmitRequest",
        "description": "The attacker is able to transmit requests through the load balancer.",
        "risktype": [],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker is able to transmit requests through the load balancer."
        }
      },
      {
        "name": "TransmitResponse",
        "description": "The attacker is able to spoof and transmit responses to clients from the network interface.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker is able to spoof and transmit responses to clients from the network interface."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Network interfaces associated with load balancers."
    }
  },
  {
    "name": "NATGateway",
    "description": "A network address translation (NAT) gateway can be used to enable instances in a private subnet to connect to the internet or other AWS services, but prevent the internet from initiating a connection with those instances.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A network address translation (NAT) gateway can be used to enable instances in a private subnet to connect to the internet or other AWS services, but prevent the internet from initiating a connection with those instances."
    }
  },
  {
    "name": "NetworkACL",
    "description": "Represents a network ACL that specifies allowed incoming and outgoing traffic on subnets.",
    "attacksteps": [],
    "metaInfo": {
      "user": "Represents a network ACL that specifies allowed incoming and outgoing traffic on subnets."
    }
  },
  {
    "name": "NetworkInterface",
    "description": "",
    "attacksteps": [
      {
        "name": "RespondConnect",
        "description": "The attacker is able to spoof the server, in case a client submits a request.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "As we do not model clients, with some limited probability, this attack step leads directly to the possibility to connect to an application.",
          "stride": "Spoofing",
          "user": "The attacker is able to spoof the server, in case a client submits a request."
        }
      },
      {
        "name": "TransmitRequest",
        "description": "The attacker is able to transmit requests from the network interface.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker is able to transmit requests from the network interface."
        }
      },
      {
        "name": "TransmitResponse",
        "description": "The attacker is able to spoof and transmit responses to clients from the network interface.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker is able to spoof and transmit responses to clients from the network interface."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy."
    }
  },
  {
    "name": "OutboundNetworkACLRule",
    "description": "Represents a network ACL rule associated with a network ACL.",
    "attacksteps": [],
    "metaInfo": {
      "user": "Represents a network ACL rule associated with a network ACL."
    }
  },
  {
    "name": "OutboundSecurityGroupRule",
    "description": "Represents a security group rule that specifies allowed incoming and outgoing traffic.",
    "attacksteps": [],
    "metaInfo": {
      "user": "Represents a security group rule that specifies allowed incoming and outgoing traffic."
    }
  },
  {
    "name": "Password",
    "description": "Represents a password used for logging into the AWS console.",
    "attacksteps": [
      {
        "name": "AttemptAccess",
        "description": "The attacker is attempting to access the credentials.",
        "risktype": [],
        "metaInfo": {
          "modeler": "The AWS parser should add a relationship from the attacker to each credentials.attemptAccess to simulate phishing attempts",
          "user": "The attacker is attempting to access the credentials."
        }
      },
      {
        "name": "CredentialTheft",
        "description": "The attacker is able to steal or harvest the credentials from for example public repositories.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Use temporary credentials or a key management service.",
          "stride": "Information Disclosure",
          "user": "The attacker is able to steal or harvest the credentials from for example public repositories."
        }
      }
    ],
    "metaInfo": {
      "modeler": "Every IAM Identity must be associated with some type of credentials. For example, for IAM User, on the console level it can be the password while on the AWS CLI/API level it can be the Access Keys (Access Key ID and Secret Access Key); for IAM Role, it can be the temporary security credentials.",
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents a password used for logging into the AWS console."
    }
  },
  {
    "name": "PortRange",
    "description": "A PortRange is an instance-independent port range, e.g. port 22, or ports 1-1024.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A PortRange is an instance-independent port range, e.g. port 22, or ports 1-1024."
    }
  },
  {
    "name": "PrivateIPRange",
    "description": "A private IP range.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A private IP range."
    }
  },
  {
    "name": "PrivateRESTAPI",
    "description": "This asset represents a private REST API connected to the API Gateway.",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "Invoke",
        "description": "The attacker is attempting to invoke APIs via API Gateway.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is attempting to invoke APIs via API Gateway."
        }
      }
    ],
    "metaInfo": {
      "user": "This asset represents a private REST API connected to the API Gateway."
    }
  },
  {
    "name": "PublicIPRange",
    "description": "A publically routable IP range.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A publically routable IP range."
    }
  },
  {
    "name": "RDS",
    "description": "This asset represents the RDS service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the RDS service."
    }
  },
  {
    "name": "RDSDeleteDBInstance",
    "description": "The DeleteDBInstance action deletes a previously provisioned DB instance.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "The DeleteDBInstance action deletes a previously provisioned DB instance.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "The DeleteDBInstance action deletes a previously provisioned DB instance."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "The DeleteDBInstance action deletes a previously provisioned DB instance."
    }
  },
  {
    "name": "RDSModifyDBInstance",
    "description": "Modifies settings for a DB instance inluding the master password.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Modifies settings for a DB instance inluding the master password.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Modifies settings for a DB instance inluding the master password."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Modifies settings for a DB instance inluding the master password."
    }
  },
  {
    "name": "RESTAPI",
    "description": "This asset represents a REST API connected to the API Gateway.",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "Invoke",
        "description": "The attacker is attempting to invoke APIs via API Gateway.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is attempting to invoke APIs via API Gateway."
        }
      }
    ],
    "metaInfo": {
      "user": "This asset represents a REST API connected to the API Gateway."
    }
  },
  {
    "name": "RESTAPIMethod",
    "description": "REST API methods send requests to AWS Lambda functions or to any routable HTTP endpoint.",
    "attacksteps": [
      {
        "name": "BodyManipulation",
        "description": "The attacker has manipulated the request body.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker has manipulated the request body."
        }
      },
      {
        "name": "Invoke",
        "description": "The attacker can invoke the API method.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can invoke the API method."
        }
      },
      {
        "name": "MalformedInvoke",
        "description": "The attacker can invoke integrations with malformed input.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker can invoke integrations with malformed input."
        }
      },
      {
        "name": "ParameterManipulation",
        "description": "The attacker has manipulated the request parameters.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker has manipulated the request parameters."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "REST API methods send requests to AWS Lambda functions or to any routable HTTP endpoint."
    }
  },
  {
    "name": "Region",
    "description": "AWS is hosted in multiple locations world-wide. Each region is a separate geographic area.",
    "attacksteps": [],
    "metaInfo": {
      "user": "AWS is hosted in multiple locations world-wide. Each region is a separate geographic area."
    }
  },
  {
    "name": "RegistryPassword",
    "description": "Docker login password for an ECR Registry",
    "attacksteps": [
      {
        "name": "Access",
        "description": "The attacker is able to access the registry password stored in the instance and can compromise it immediately if unencrypted.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is able to access the registry password stored in the instance and can compromise it immediately if unencrypted."
        }
      },
      {
        "name": "Compromise",
        "description": "The attacker has compromised the password and can access all repositories the corresponding IAM user has access to.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "stride": "Information Disclosure",
          "user": "The attacker has compromised the password and can access all repositories the corresponding IAM user has access to."
        }
      },
      {
        "name": "CompromiseCrack",
        "description": "The attacker has cracked the encrypted registry password.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "user": "The attacker has cracked the encrypted registry password."
        }
      },
      {
        "name": "CompromiseGenerated",
        "description": "The attacker has generated a registry password for ECR authentication.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker has generated a registry password for ECR authentication."
        }
      },
      {
        "name": "CompromiseUnencrypted",
        "description": "The attacker can access the unencrypted registry password with docker ps -e or from a config file.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Use the Amazon ECR credential helper to store docker credentials.",
          "user": "The attacker can access the unencrypted registry password with docker ps -e or from a config file."
        }
      }
    ],
    "metaInfo": {
      "developer": "Does not inherit from Credentials since it's the related AuthTok which can be used to assume an identity in IAM",
      "user": "Docker login password for an ECR Registry"
    }
  },
  {
    "name": "ResourceBasedAllowStatement",
    "description": "A resource-based statement which explicitly allows an action.",
    "attacksteps": [
      {
        "name": "Satisfy",
        "description": "The attacker has satisfied the conditions to execute the actions of the statement.",
        "risktype": [],
        "metaInfo": {
          "developer": "Satisfy is only activated when a statement is called both from an action and a principal. This allows for a higher degree of traceability between policies, statements, principals, and performed actions.",
          "user": "The attacker has satisfied the conditions to execute the actions of the statement."
        }
      }
    ],
    "metaInfo": {
      "developer": "All instances of resource-based statements should only point to the Identities they apply to and the local actions of the associated resource.",
      "user": "A resource-based statement which explicitly allows an action."
    }
  },
  {
    "name": "ResourceBasedDenyStatement",
    "description": "A resource-based statement which explicitly denies an action.",
    "attacksteps": [
      {
        "name": "Satisfy",
        "description": "The attacker has satisfied the conditions to execute the actions of the statement.",
        "risktype": [],
        "metaInfo": {
          "developer": "Satisfy is only activated when a statement is called both from an action and a principal. This allows for a higher degree of traceability between policies, statements, principals, and performed actions.",
          "user": "The attacker has satisfied the conditions to execute the actions of the statement."
        }
      }
    ],
    "metaInfo": {
      "developer": "All instances of resource-based statements should only point to the Identities they apply to and the local actions of the associated resource.",
      "user": "A resource-based statement which explicitly denies an action."
    }
  },
  {
    "name": "ResourceBasedPolicy",
    "description": "A policy is an entity in AWS that, when associated with an identity or resource, defines their permissions.",
    "attacksteps": [
      {
        "name": "Satisfy",
        "description": "The policy has been successfully used by the attacker.",
        "risktype": [],
        "metaInfo": {
          "user": "The policy has been successfully used by the attacker."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A policy is an entity in AWS that, when associated with an identity or resource, defines their permissions."
    }
  },
  {
    "name": "Route",
    "description": "Routes associated with a Route table.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Routes associated with a Route table."
    }
  },
  {
    "name": "RouteTable",
    "description": "Represents a route table in a VPC and its routes.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Represents a route table in a VPC and its routes."
    }
  },
  {
    "name": "S3",
    "description": "This asset represents the S3 service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the S3 service."
    }
  },
  {
    "name": "S3API",
    "description": "Represents the API of the S3 service.",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "Invoke",
        "description": "Invoke the S3 API by effectively connecting to S3 over the Internet.",
        "risktype": [],
        "metaInfo": {
          "user": "Invoke the S3 API by effectively connecting to S3 over the Internet."
        }
      }
    ],
    "metaInfo": {
      "user": "Represents the API of the S3 service."
    }
  },
  {
    "name": "S3Bucket",
    "description": "An S3 bucket is a virtual environment in Amazon's Simple Storage Service (Amazon S3) for object storage in the Amazon Web Services (AWS) cloud infrastructure.",
    "attacksteps": [
      {
        "name": "Connect",
        "description": "Anyone can connect to any bucket but the correct permissions are required to access the content.",
        "risktype": [],
        "metaInfo": {
          "user": "Anyone can connect to any bucket but the correct permissions are required to access the content."
        }
      },
      {
        "name": "DeleteBucket",
        "description": "The attacker has gained the sufficient permissions and network access to delete S3 buckets.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1485 Data Destruction",
          "user": "The attacker has gained the sufficient permissions and network access to delete S3 buckets."
        }
      },
      {
        "name": "DeleteObject",
        "description": "The attacker is able to delete one or more objects in the bucket.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1485 Data Destruction",
          "stride": "Tampering",
          "user": "The attacker is able to delete one or more objects in the bucket."
        }
      },
      {
        "name": "EncryptObjectForImpact",
        "description": "The attacker can encrypt objects in a bucket to interrupt availability or for extortion.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1486 Data Encrypted for Impact",
          "stride": "Denial of service",
          "user": "The attacker can encrypt objects in a bucket to interrupt availability or for extortion."
        }
      },
      {
        "name": "ListBucket",
        "description": "The attacker has gained the sufficient permissions and network access to list S3 buckets.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has gained the sufficient permissions and network access to list S3 buckets."
        }
      },
      {
        "name": "ListObject",
        "description": "The attacker is able to list one or more objects in the bucket.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is able to list one or more objects in the bucket."
        }
      },
      {
        "name": "ReadObject",
        "description": "The attacker is able to read one or more objects in the bucket.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Ensure that your Amazon S3 buckets use the correct policies and are not publicly accessible. For more information, see https://docs.aws.amazon.com/AmazonS3/latest/dev/security-best-practices.html.",
          "mitre": "T1530 Data from Cloud Storage Object",
          "stride": "Information Disclosure",
          "user": "The attacker is able to read one or more objects in the bucket."
        }
      },
      {
        "name": "WriteObject",
        "description": "The attacker is able to write one or more objects in the bucket.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1565.001 Data Manipulation: Stored Data Manipulation",
          "stride": "Tampering",
          "user": "The attacker is able to write one or more objects in the bucket."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "An S3 bucket is a virtual environment in Amazon's Simple Storage Service (Amazon S3) for object storage in the Amazon Web Services (AWS) cloud infrastructure."
    }
  },
  {
    "name": "S3DeleteBucket",
    "description": "DELETE Bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket itself can be deleted.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Deletes the bucket and all objects in it.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Deletes the bucket and all objects in it."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-bucket.html",
      "user": "DELETE Bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket itself can be deleted."
    }
  },
  {
    "name": "S3DeleteObject",
    "description": "The DELETE operation removes the null version (if there is one) of an object and inserts a delete marker, which becomes the current version of the object. If there isn't a null version, Amazon S3 does not remove any objects.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Removes and object from a bucket.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Removes and object from a bucket."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectVersioning.html",
      "user": "The DELETE operation removes the null version (if there is one) of an object and inserts a delete marker, which becomes the current version of the object. If there isn't a null version, Amazon S3 does not remove any objects."
    }
  },
  {
    "name": "S3GetObject",
    "description": "Retrieves objects from Amazon S3 bucket.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Retrieves objects from Amazon S3 bucket.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Retrieves objects from Amazon S3 bucket."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Retrieves objects from Amazon S3 bucket."
    }
  },
  {
    "name": "S3ListBucket",
    "description": "GET Bucket (List Objects), HEAD Bucket (determine if a bucket exists and you have permission to access it)",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Determines if a bucket exists and if you have access to it.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Determines if a bucket exists and if you have access to it."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://aws.amazon.com/blogs/security/writing-iam-policies-how-to-grant-access-to-an-amazon-s3-bucket/",
      "user": "GET Bucket (List Objects), HEAD Bucket (determine if a bucket exists and you have permission to access it)"
    }
  },
  {
    "name": "S3Object",
    "description": "Amazon S3 stores data as objects within buckets.",
    "attacksteps": [
      {
        "name": "AuthenticatedDecrypt",
        "description": "The attacker is authenticated to decrypt encrypted data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to decrypt encrypted data."
        }
      },
      {
        "name": "AuthenticatedDelete",
        "description": "The attacker is authenticated to access and delete the data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and delete the data."
        }
      },
      {
        "name": "AuthenticatedEncrypt",
        "description": "The attacker is authenticated to encrypt and write the encrypted data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to encrypt and write the encrypted data."
        }
      },
      {
        "name": "AuthenticatedList",
        "description": "The attacker is authenticated to access and list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is authenticated to access and list the data."
        }
      },
      {
        "name": "AuthenticatedRead",
        "description": "The attacker has gained read access to the S3 object",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Ensure that your Amazon S3 buckets use the correct policies and are not publicly accessible. For more information, see https://docs.aws.amazon.com/AmazonS3/latest/dev/security-best-practices.html.",
          "user": "The attacker has gained read access to the S3 object"
        }
      },
      {
        "name": "AuthenticatedWrite",
        "description": "The attacker is authenticated to access and write data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "user": "The attacker is authenticated to access and write data."
        }
      },
      {
        "name": "Delete",
        "description": "The attacker can delete the data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1485 Data Destruction",
          "stride": "Tampering",
          "user": "The attacker can delete the data."
        }
      },
      {
        "name": "DenialOfService",
        "description": "The attacker is preventing regular access to the data.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "stride": "Denial of Service",
          "user": "The attacker is preventing regular access to the data."
        }
      },
      {
        "name": "Encrypt",
        "description": "The attacker is able to encrypt the data to interrupt availability or extortion.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1486 Data Encrypted for Impact",
          "user": "The attacker is able to encrypt the data to interrupt availability or extortion."
        }
      },
      {
        "name": "List",
        "description": "The attacker can list the data.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can list the data."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read the data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "stride": "Information Disclosure",
          "user": "The attacker can read the data."
        }
      },
      {
        "name": "Write",
        "description": "The attacker can write to the location of the data, effectively deleting it.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "mitre": "T1565 Data Manipulation",
          "stride": "Tampering",
          "user": "The attacker can write to the location of the data, effectively deleting it."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Amazon S3 stores data as objects within buckets."
    }
  },
  {
    "name": "S3PutObject",
    "description": "Adds an object to a bucket.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Adds an object to a bucket.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Adds an object to a bucket."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Adds an object to a bucket."
    }
  },
  {
    "name": "SSHKey",
    "description": "Represents EC2 instance key pairs that can be used to authenticate on it.",
    "attacksteps": [
      {
        "name": "AttemptAccess",
        "description": "The attacker is attempting to access the credentials.",
        "risktype": [],
        "metaInfo": {
          "modeler": "The AWS parser should add a relationship from the attacker to each credentials.attemptAccess to simulate phishing attempts",
          "user": "The attacker is attempting to access the credentials."
        }
      },
      {
        "name": "CredentialTheft",
        "description": "The attacker is able to steal or harvest the credentials from for example public repositories.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "mitigation": "Use temporary credentials or a key management service.",
          "stride": "Information Disclosure",
          "user": "The attacker is able to steal or harvest the credentials from for example public repositories."
        }
      }
    ],
    "metaInfo": {
      "modeler": "Every IAM Identity must be associated with some type of credentials. For example, for IAM User, on the console level it can be the password while on the AWS CLI/API level it can be the Access Keys (Access Key ID and Secret Access Key); for IAM Role, it can be the temporary security credentials.",
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "mitre": "TA0006 Private Keys",
      "user": "Represents EC2 instance key pairs that can be used to authenticate on it."
    }
  },
  {
    "name": "SSMStartSession",
    "description": "Starts a SSM session to the specified instances.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Starts a SSM session to the specified instances.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Starts a SSM session to the specified instances."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
      "user": "Starts a SSM session to the specified instances."
    }
  },
  {
    "name": "STSAssumeRole",
    "description": "Assume a role by requesting a set of temporary security credentials that you can use to access AWS resources.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Assume a role by requesting a set of temporary security credentials that you can use to access AWS resources.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Assume a role by requesting a set of temporary security credentials that you can use to access AWS resources."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html",
      "user": "Assume a role by requesting a set of temporary security credentials that you can use to access AWS resources."
    }
  },
  {
    "name": "SageMaker",
    "description": "This asset represents the SageMaker service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the SageMaker service."
    }
  },
  {
    "name": "SageMakerCreateNotebookInstance",
    "description": "Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateNotebookInstance.html",
      "user": "Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook."
    }
  },
  {
    "name": "SageMakerCreatePresignedNotebookInstanceUrl",
    "description": "Returns a URL that you can use to connect to the Jupyter server from a notebook instance.",
    "attacksteps": [
      {
        "name": "PerformAction",
        "description": "Returns a URL that you can use to connect to the Jupyter server from a notebook instance.",
        "risktype": [],
        "metaInfo": {
          "developer": "When an action is performed the associated statements are called for traceability.",
          "user": "Returns a URL that you can use to connect to the Jupyter server from a notebook instance."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreatePresignedNotebookInstanceUrl.html",
      "user": "Returns a URL that you can use to connect to the Jupyter server from a notebook instance."
    }
  },
  {
    "name": "SecurityGroup",
    "description": "Represents a security group that controls incoming and outgoing traffic.",
    "attacksteps": [
      {
        "name": "Satisfy",
        "description": "The attacker satisfies the rules of the security group by connecting to or from allowed IP addresses and ports.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "The attacker satisfies the rules of the security group by connecting to or from allowed IP addresses and ports."
        }
      }
    ],
    "metaInfo": {
      "user": "Represents a security group that controls incoming and outgoing traffic."
    }
  },
  {
    "name": "ServiceAPI",
    "description": "A service API is an Amazon-controlled endpoint accepting API calls to the AWS infrastructure.",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "Invoke",
        "description": "The attacker is able to invoke the API with e.g., a HTTP request.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is able to invoke the API with e.g., a HTTP request."
        }
      }
    ],
    "metaInfo": {
      "user": "A service API is an Amazon-controlled endpoint accepting API calls to the AWS infrastructure."
    }
  },
  {
    "name": "Subnet",
    "description": "Subnets running in a VPC",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Subnets running in a VPC"
    }
  },
  {
    "name": "TransitGateway",
    "description": "Transit Gateways connects VPCs and on-premises networks through a central hub.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Transit Gateways connects VPCs and on-premises networks through a central hub."
    }
  },
  {
    "name": "TransitGatewayAttachment",
    "description": "Transit Gateway attachments to VPCs.",
    "attacksteps": [],
    "metaInfo": {
      "user": "Transit Gateway attachments to VPCs."
    }
  },
  {
    "name": "TransitGatewayRouteTable",
    "description": "Transit Gateway route tables specifies how traffic is routed.",
    "attacksteps": [
      {
        "name": "AttemptVpnConnection",
        "description": "The attacker is attempting to connect via the attached VPN.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is attempting to connect via the attached VPN."
        }
      },
      {
        "name": "VpnConnection",
        "description": "The attacker is able to connect via the attached VPN.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is able to connect via the attached VPN."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "Transit Gateway route tables specifies how traffic is routed."
    }
  },
  {
    "name": "TransitGatewayRouteTableRoute",
    "description": "Transit Gateway route table routes specifies how traffic is routed.",
    "attacksteps": [],
    "metaInfo": {
      "user": "Transit Gateway route table routes specifies how traffic is routed."
    }
  },
  {
    "name": "UnknownApplication",
    "description": "Represents the possibility of applications, libraries and services running on an instance that are unknown to the developer or operator.",
    "attacksteps": [
      {
        "name": "CodeExecution",
        "description": "The attacker can execute arbitrary code in the application, assuming it's privileges.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "This attack steps specifically models the type of code injections which result in arbitrary code executions (e.g., buffer overflows), where the attacker can redirect the flow of execution, for example, by modifying program counter/instruction pointer of the host. (See CWE-94 on code injection <https://cwe.mitre.org/data/definitions/94.html> and, for example, CAPEC-100 on overflowing buffers <https://capec.mitre.org/data/definitions/100.html>)",
          "mitre": "T1210 Exploitation of Remote Services",
          "stride": "Tampering",
          "user": "The attacker can execute arbitrary code in the application, assuming it's privileges."
        }
      },
      {
        "name": "Deny",
        "description": "The attacker can deny some or all functionality and data pertaining to this service.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitre": "T1499 Endpoint Denial of Service",
          "stride": "Denial of Service",
          "user": "The attacker can deny some or all functionality and data pertaining to this service."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker has gained admin rights to the application.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker has gained admin rights to the application."
        }
      },
      {
        "name": "LocalConnect",
        "description": "The attacker has gained low-privilege access on the executing instance and can interact with the application.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1007 System Service Discovery",
          "user": "The attacker has gained low-privilege access on the executing instance and can interact with the application."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker has gained user rights to the application.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker has gained user rights to the application."
        }
      },
      {
        "name": "Modify",
        "description": "The attacker can modify some or all of this service's data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can modify some or all of this service's data."
        }
      },
      {
        "name": "NetworkRequestConnect",
        "description": "The attacker has successfully sent a request to the application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "The attacker has successfully sent a request to the application."
        }
      },
      {
        "name": "NetworkRespondConnect",
        "description": "An attacker might be able to respond with forged requests submitted by an application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "An attacker might be able to respond with forged requests submitted by an application."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read some or all of this service's code and data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "developer": "We don't model the services data, as we do not expect that information will be available to the parser. We also don't differentiate between service administrators and service users (e.g., mail service admins and users), as we have no information about the services.",
          "stride": "Information Disclosure",
          "user": "The attacker can read some or all of this service's code and data."
        }
      },
      {
        "name": "RequestForgery",
        "description": "The attacker can create or control transmissions from a vulnerable application.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker can create or control transmissions from a vulnerable application."
        }
      }
    ],
    "metaInfo": {
      "modeler": "To be used together with UnknownVulnerability and Exploit specializations based on modeling scenario",
      "developer": "Meant to capture what-if scenarios or uncertainty about what applications are installed on a host.",
      "user": "Represents the possibility of applications, libraries and services running on an instance that are unknown to the developer or operator."
    }
  },
  {
    "name": "UnknownVulnerability",
    "description": "Represents the possibility of vulnerabilities or weaknessess in applications unknown to the developer or operator.",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "",
        "risktype": [],
        "metaInfo": {}
      },
      {
        "name": "Exploit",
        "description": "The attacker is able to exploit this vulnerability.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is able to exploit this vulnerability."
        }
      }
    ],
    "metaInfo": {
      "developer": "Meant to capture vulnerabilities without CVE or to model what-if scenarios where the parser controls the impact and distribution based on e.g., Attacker Profiles",
      "user": "Represents the possibility of vulnerabilities or weaknessess in applications unknown to the developer or operator."
    }
  },
  {
    "name": "User",
    "description": "Represents a physical person with access to credentials and accounts.",
    "attacksteps": [
      {
        "name": "Compromise",
        "description": "The attacker is an insider or has successfully compromised a user.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is an insider or has successfully compromised a user."
        }
      },
      {
        "name": "Recruit",
        "description": "The attacker has successfully recruited a user to turn malicious.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker has successfully recruited a user to turn malicious."
        }
      },
      {
        "name": "SpearPhish",
        "description": "The attacker can impersonate and authenticate as the user in all systems.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can impersonate and authenticate as the user in all systems."
        }
      }
    ],
    "metaInfo": {
      "user": "Represents a physical person with access to credentials and accounts."
    }
  },
  {
    "name": "UserGroup",
    "description": "User groups outside of AWS that manages users, permissions and access to other groups and AWS resources.",
    "attacksteps": [
      {
        "name": "Assume",
        "description": "The attacker can assume the groups and gain all it's privileges and permissions.",
        "risktype": [],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker can assume the groups and gain all it's privileges and permissions."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "User groups outside of AWS that manages users, permissions and access to other groups and AWS resources."
    }
  },
  {
    "name": "VPC",
    "description": "Represents Virtual Private Clouds in a AWS account.",
    "attacksteps": [],
    "metaInfo": {
      "user": "Represents Virtual Private Clouds in a AWS account."
    }
  },
  {
    "name": "VPCEndpoint",
    "description": "A VPC endpoint acts like a virtual network interface in a subnet that enables private connections to supported AWS services.",
    "attacksteps": [
      {
        "name": "RespondConnect",
        "description": "The attacker is able to spoof the server, in case a client submits a request.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "As we do not model clients, with some limited probability, this attack step leads directly to the possibility to connect to an application.",
          "stride": "Spoofing",
          "user": "The attacker is able to spoof the server, in case a client submits a request."
        }
      },
      {
        "name": "TransmitRequest",
        "description": "The attacker is able to transmit requests through the VPC endpoint.",
        "risktype": [],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker is able to transmit requests through the VPC endpoint."
        }
      },
      {
        "name": "TransmitResponse",
        "description": "The attacker is able to spoof and transmit responses to clients from the network interface.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker is able to spoof and transmit responses to clients from the network interface."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A VPC endpoint acts like a virtual network interface in a subnet that enables private connections to supported AWS services."
    }
  },
  {
    "name": "VPCEndpointInstance",
    "description": "",
    "attacksteps": [
      {
        "name": "Discover",
        "description": "The attacker has successfully discovered the resource.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker has successfully discovered the resource."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker can access any application and transmit traffic from the instance.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can access any application and transmit traffic from the instance."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker can connect to any local application allows for network transmissions from the instance.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker can connect to any local application allows for network transmissions from the instance."
        }
      },
      {
        "name": "Terminate",
        "description": "The attacker can terminate the instance and any data on associated with it is deleted.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitigation": "Enable termination protection and do frequent backups. For more information, see https://aws.amazon.com/premiumsupport/knowledge-center/accidental-termination/.",
          "developer": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html",
          "mitre": "T1529 System Shutdown/Reboot",
          "stride": "Denial of Service",
          "user": "The attacker can terminate the instance and any data on associated with it is deleted."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy."
    }
  },
  {
    "name": "VPCEndpointListener",
    "description": "A listener of a VPC endpoint that listens for incoming traffic.",
    "attacksteps": [
      {
        "name": "CodeExecution",
        "description": "The attacker can execute arbitrary code in the application, assuming it's privileges.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "developer": "This attack steps specifically models the type of code injections which result in arbitrary code executions (e.g., buffer overflows), where the attacker can redirect the flow of execution, for example, by modifying program counter/instruction pointer of the host. (See CWE-94 on code injection <https://cwe.mitre.org/data/definitions/94.html> and, for example, CAPEC-100 on overflowing buffers <https://capec.mitre.org/data/definitions/100.html>)",
          "mitre": "T1210 Exploitation of Remote Services",
          "stride": "Tampering",
          "user": "The attacker can execute arbitrary code in the application, assuming it's privileges."
        }
      },
      {
        "name": "Deny",
        "description": "The attacker can deny some or all functionality and data pertaining to this service.",
        "risktype": [
          "AVAILABILITY"
        ],
        "metaInfo": {
          "mitre": "T1499 Endpoint Denial of Service",
          "stride": "Denial of Service",
          "user": "The attacker can deny some or all functionality and data pertaining to this service."
        }
      },
      {
        "name": "HighPrivilegeAccess",
        "description": "The attacker has gained admin rights to the application.",
        "risktype": [
          "AVAILABILITY",
          "CONFIDENTIALITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker has gained admin rights to the application."
        }
      },
      {
        "name": "LocalConnect",
        "description": "The attacker has gained low-privilege access on the executing instance and can interact with the application.",
        "risktype": [],
        "metaInfo": {
          "mitre": "T1007 System Service Discovery",
          "user": "The attacker has gained low-privilege access on the executing instance and can interact with the application."
        }
      },
      {
        "name": "LowPrivilegeAccess",
        "description": "The attacker has gained user rights to the application.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker has gained user rights to the application."
        }
      },
      {
        "name": "Modify",
        "description": "The attacker can modify some or all of this service's data.",
        "risktype": [
          "AVAILABILITY",
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Tampering",
          "user": "The attacker can modify some or all of this service's data."
        }
      },
      {
        "name": "NetworkRequestConnect",
        "description": "The attacker can send requests to the application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security groups, ACLs, load balancers and gateways.",
          "mitre": "T1580 Cloud Infrastructure Discovery",
          "user": "The attacker can send requests to the application."
        }
      },
      {
        "name": "NetworkRespondConnect",
        "description": "An attacker might be able to respond with forged requests submitted by an application.",
        "risktype": [],
        "metaInfo": {
          "mitigation": "Implement the least permissive rules for your security group. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#security-group-rules.",
          "user": "An attacker might be able to respond with forged requests submitted by an application."
        }
      },
      {
        "name": "Read",
        "description": "The attacker can read some or all of this service's code and data.",
        "risktype": [
          "CONFIDENTIALITY"
        ],
        "metaInfo": {
          "developer": "We don't model the services data, as we do not expect that information will be available to the parser. We also don't differentiate between service administrators and service users (e.g., mail service admins and users), as we have no information about the services.",
          "stride": "Information Disclosure",
          "user": "The attacker can read some or all of this service's code and data."
        }
      },
      {
        "name": "RequestForgery",
        "description": "The attacker can create or control transmissions from a vulnerable application.",
        "risktype": [
          "INTEGRITY"
        ],
        "metaInfo": {
          "stride": "Spoofing",
          "user": "The attacker can create or control transmissions from a vulnerable application."
        }
      }
    ],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "A listener of a VPC endpoint that listens for incoming traffic."
    }
  },
  {
    "name": "VPCPeering",
    "description": "A VPC peering connection is a networking connection between two VPCs that enables you to route traffic between them privately",
    "attacksteps": [],
    "metaInfo": {
      "user": "A VPC peering connection is a networking connection between two VPCs that enables you to route traffic between them privately"
    }
  },
  {
    "name": "VPCService",
    "description": "This asset represents the VPC service.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "AWSService assets are used to represent AWS services as a whole and works as a placeholder where specific resources needs to be referenced in IAM statements.",
      "user": "This asset represents the VPC service."
    }
  },
  {
    "name": "VPNConnection",
    "description": "An AWS Site-to-Site VPN provide an IPSec connection between your VPC and your remote network.",
    "attacksteps": [],
    "metaInfo": {
      "user": "An AWS Site-to-Site VPN provide an IPSec connection between your VPC and your remote network."
    }
  },
  {
    "name": "VPNGateway",
    "description": "In AWS, the VPN concentrator on the Amazon side of the Site-to-Site VPN connection is called 'virtual private gateway' while that on the remote network side is called 'customer gateway'. In awsLang, they are referred by the same name, 'VPNGateway', because they perform similar functions.",
    "attacksteps": [],
    "metaInfo": {
      "developer": "In AWS, a resource is an entity you can work with. Examples include an Amazon EC2 instance, an Amazon S3 bucket, etc. Concretely, a resource can be the target of a policy.",
      "user": "In AWS, the VPN concentrator on the Amazon side of the Site-to-Site VPN connection is called 'virtual private gateway' while that on the remote network side is called 'customer gateway'. In awsLang, they are referred by the same name, 'VPNGateway', because they perform similar functions."
    }
  },
  {
    "name": "Vulnerability",
    "description": "A vulnerability that affects applications and operating systems and are represented according to CVSS.",
    "attacksteps": [
      {
        "name": "Exploit",
        "description": "The attacker is able to exploit this vulnerability.",
        "risktype": [],
        "metaInfo": {
          "user": "The attacker is able to exploit this vulnerability."
        }
      }
    ],
    "metaInfo": {
      "developer": "https://www.first.org/cvss/specification-document",
      "user": "A vulnerability that affects applications and operating systems and are represented according to CVSS."
    }
  },
  {
    "name": "WebACL",
    "description": "",
    "attacksteps": [],
    "metaInfo": {}
  },
  {
    "name": "WebACLRuleAllow",
    "description": "",
    "attacksteps": [],
    "metaInfo": {}
  },
  {
    "name": "WebACLRuleBlock",
    "description": "",
    "attacksteps": [],
    "metaInfo": {}
  }
]
